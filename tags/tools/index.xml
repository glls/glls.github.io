<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools | George Litos</title>
    <link>http://localhost:1313/tags/tools/</link>
      <atom:link href="http://localhost:1313/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    <description>Tools</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sun, 17 Aug 2025 15:42:11 +0300</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu_fb37dc6c584384a9.png</url>
      <title>Tools</title>
      <link>http://localhost:1313/tags/tools/</link>
    </image>
    
    <item>
      <title>From Floppy Swaps to Cross-Platform Power: My Journey to Lazarus FPC 🚀</title>
      <link>http://localhost:1313/post/lazarus/</link>
      <pubDate>Sun, 17 Aug 2025 15:42:11 +0300</pubDate>
      <guid>http://localhost:1313/post/lazarus/</guid>
      <description>&lt;p&gt;Hey everyone! Today, I want to share a bit about my programming journey and introduce you to a fantastic, often overlooked tool that&amp;rsquo;s been a consistent companion through the years: &lt;a href=&#34;https://www.lazarus-ide.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lazarus Free Pascal&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My story in coding began, like many in the late 80s and early 90s, with the legendary &lt;strong&gt;Turbo C&lt;/strong&gt;.  I remember the thrill of typing out code in that stark blue text-mode editor, and the satisfaction of seeing my C programs compile. But there was a challenge, especially with my trusty one-floppy 8088 PC, an &lt;strong&gt;Olivetti Prodest PC 1&lt;/strong&gt;. Compiling anything beyond the simplest applications meant a constant dance of swapping floppy disks – one for the compiler, another for the libraries, then back again. It was a tedious, but character-building, experience!
















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Olivetti Prodest PC 1&#34; srcset=&#34;
               /post/lazarus/pc1_hu_4c1efd8cc3fa6443.webp 400w,
               /post/lazarus/pc1_hu_580e1c8485abe4e7.webp 760w,
               /post/lazarus/pc1_hu_5feaa3ebb2305ae1.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/lazarus/pc1_hu_4c1efd8cc3fa6443.webp&#34;
               width=&#34;591&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s when I discovered &lt;strong&gt;Turbo Pascal&lt;/strong&gt;.  Its integrated development environment (IDE) was the same with Turbo C without the disk swapping! Everything I needed was right there. The speed and simplicity of Pascal, coupled with the seamless workflow, made it my go-to language. It felt like magic after the floppy shuffle of C.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Turbo C 2.01&#34; srcset=&#34;
               /post/lazarus/tc2_hu_fd89aab6ce8b4268.webp 400w,
               /post/lazarus/tc2_hu_79084dfa30ead128.webp 760w,
               /post/lazarus/tc2_hu_51cc566bee39d2d6.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/lazarus/tc2_hu_fd89aab6ce8b4268.webp&#34;
               width=&#34;648&#34;
               height=&#34;408&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Turbo Pascal 5.5&#34; srcset=&#34;
               /post/lazarus/tp55_hu_fdae864f924b992d.webp 400w,
               /post/lazarus/tp55_hu_7314a757ba8dc1c3.webp 760w,
               /post/lazarus/tp55_hu_70d844661605fc49.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/lazarus/tp55_hu_fdae864f924b992d.webp&#34;
               width=&#34;760&#34;
               height=&#34;470&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Fast forward to the 2000s, and the Windows era. Borland continued to be a major player with &lt;strong&gt;Borland Delphi&lt;/strong&gt; and &lt;strong&gt;C++Builder&lt;/strong&gt;.   Delphi, with its visual component library (VCL) and rapid application development (RAD) capabilities, was a game-changer for Windows GUI programming. Building sophisticated applications with drag-and-drop ease was incredibly empowering. C++Builder offered a similar RAD experience for C++ developers, leveraging the same powerful VCL framework. These tools were at the forefront of Windows development for a long time.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Borland Delphi 7.0&#34; srcset=&#34;
               /post/lazarus/delphi7_hu_d9a1f8397a3a105.webp 400w,
               /post/lazarus/delphi7_hu_2267375b731544ec.webp 760w,
               /post/lazarus/delphi7_hu_c10732caa21425e0.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/lazarus/delphi7_hu_d9a1f8397a3a105.webp&#34;
               width=&#34;640&#34;
               height=&#34;480&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-resurgence-lazarus-fpc---a-modern-open-source-powerhouse&#34;&gt;The Resurgence: Lazarus FPC - A Modern Open-Source Powerhouse&lt;/h2&gt;
&lt;p&gt;Years passed, and while the Borland tools evolved under different ownership, I was thrilled to discover that the spirit of Turbo Pascal and Delphi lives on, stronger than ever, in &lt;strong&gt;Lazarus FPC&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Lazarus is an open-source, cross-platform IDE that uses the &lt;strong&gt;Free Pascal Compiler (FPC)&lt;/strong&gt;. It&amp;rsquo;s a testament to the enduring power and flexibility of the Pascal language and the RAD paradigm. What makes Lazarus truly remarkable is its commitment to being &lt;strong&gt;Free and Open-Source Software (FOSS)&lt;/strong&gt;, supported by a vibrant and dedicated community.
















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Lazarus IDE&#34; srcset=&#34;
               /post/lazarus/lazarus_hu_1713c2f796d7ecbc.webp 400w,
               /post/lazarus/lazarus_hu_5d46c97a4c994a61.webp 760w,
               /post/lazarus/lazarus_hu_68167d342356072a.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/lazarus/lazarus_hu_1713c2f796d7ecbc.webp&#34;
               width=&#34;760&#34;
               height=&#34;527&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;why-lazarus-fpc-is-a-big-deal&#34;&gt;Why Lazarus FPC is a Big Deal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Delphi Compatibility:&lt;/strong&gt; If you&amp;rsquo;re coming from a Delphi background, Lazarus will feel incredibly familiar. It aims for high compatibility with Delphi&amp;rsquo;s Object Pascal dialect and its Visual Component Library (VCL), offering a similar component-based, drag-and-drop development experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Truly Cross-Platform:&lt;/strong&gt; This is where Lazarus shines! You can develop applications on one operating system and compile them for others with little to no code changes. This means you can create native applications for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows (32-bit and 64-bit)&lt;/li&gt;
&lt;li&gt;Linux (GTK, Qt)&lt;/li&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;And even some embedded systems like Raspberry Pi!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This &amp;ldquo;write once, compile anywhere&amp;rdquo; philosophy saves an immense amount of time and effort.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Native Binaries:&lt;/strong&gt; Unlike some other cross-platform solutions that rely on virtual machines or runtimes, Lazarus compiles your code into native executables. This results in highly performant applications with a small footprint and no external dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Rich Component Library (LCL):&lt;/strong&gt; The Lazarus Component Library (LCL) is extensive, providing a wide array of visual and non-visual components for building all sorts of applications, from simple utilities to complex database systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Active Community and FOSS:&lt;/strong&gt; Being open-source means Lazarus is constantly evolving, with bug fixes, new features, and a supportive community ready to help. It&amp;rsquo;s a refreshing contrast to proprietary tools where you might be at the mercy of a single vendor.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;real-world-applications-built-with-lazarus-fpc&#34;&gt;Real-World Applications Built with Lazarus FPC&lt;/h3&gt;
&lt;p&gt;You might be surprised by some of the well-known applications that are built with Lazarus and Free Pascal. Here are just a few examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Double Commander:&lt;/strong&gt; A popular, open-source, cross-platform file manager with a dual-pane interface, similar to Total Commander. It&amp;rsquo;s a fantastic example of a robust application built entirely with Lazarus.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beyond Compare (macOS and Linux versions):&lt;/strong&gt; This widely used data comparison utility leverages Lazarus for its macOS and Linux editions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And many more! The list is constantly growing, check the wiki &lt;a href=&#34;https://wiki.freepascal.org/Projects_using_Free_Pascal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;, showcasing the power and versatility of Lazarus FPC for various types of software.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;my-ongoing-journey&#34;&gt;My Ongoing Journey&lt;/h2&gt;
&lt;p&gt;From the floppy-swapping days of Turbo C and Turbo Pascal to the visual magic of Delphi and C++Builder, and now to the open-source, cross-platform power of Lazarus FPC, my journey in programming has been a continuous evolution.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re looking for a powerful, flexible, and free alternative for building native applications across different operating systems, I highly recommend giving Lazarus FPC a try. You might just find your new favorite development environment!&lt;/p&gt;
&lt;p&gt;Happy coding! ✨&lt;/p&gt;
&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cc.embarcadero.com/Item/25636&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Turbo C 2.01&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cc.embarcadero.com/Item/26015&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Turbo Pascal 5.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.computinghistory.org.uk/det/15452/Olivetti-PC1-Prodest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Olivetti Prodest PC 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://winworldpc.com/product/ms-dos/622&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MS-DOS 6.22&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Borland&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia: Borland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://winworldpc.com/product/delphi/70&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Borland Delphi 7.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Free_Pascal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia: Free Pascal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Lazarus_%28IDE%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia: Lazarus (IDE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Visual_Component_Library&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia: Visual Component Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Developer&#39;s Introduction to Unraid</title>
      <link>http://localhost:1313/post/unraid/</link>
      <pubDate>Sun, 17 Aug 2025 14:49:36 +0300</pubDate>
      <guid>http://localhost:1313/post/unraid/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://unraid.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unraid&lt;/a&gt; is a proprietary Linux-based operating system designed for &lt;strong&gt;home servers and small businesses&lt;/strong&gt;. It&amp;rsquo;s known for its unique storage management system, which provides flexibility and data protection. Developers often use Unraid to run a variety of services, including web servers, databases, and CI/CD tools, all on a single machine.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;key-features-for-developers&#34;&gt;Key Features for Developers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Docker and Virtualization:&lt;/strong&gt; Unraid has built-in support for running Docker containers and virtual machines. This is a major plus for developers, as it allows them to easily deploy and manage isolated application environments. You can run multiple services (e.g., a web server, a database, and a caching layer) in separate containers without them interfering with each other. This is especially useful for testing and production environments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Flexible Storage:&lt;/strong&gt; Unraid&amp;rsquo;s most distinctive feature is its storage array. It combines drives of different sizes into a single, logical pool. This is unlike traditional RAID, which typically requires drives of the same size. Unraid uses a &lt;strong&gt;parity drive&lt;/strong&gt; (or two for more protection) to protect against a single (or two) drive failure. Data is written directly to individual drives, which makes it easy to add or remove drives without rebuilding the entire array. For developers, this means they can start with a small setup and expand storage as needed without downtime or complex migrations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Plugin System and Community Apps:&lt;/strong&gt; Unraid has a robust plugin system and a &amp;ldquo;Community Apps&amp;rdquo; store. This allows developers to easily install and manage a wide range of applications, including many useful for development, like Gitlab, Plex, and various reverse proxies. This makes it easy to set up a comprehensive development and media server environment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;how-it-works&#34;&gt;How it Works&lt;/h2&gt;
&lt;p&gt;Unraid separates its storage into a few key areas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Array:&lt;/strong&gt; The main storage pool for your data. Drives can be of different sizes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parity Drive(s):&lt;/strong&gt; These drives don&amp;rsquo;t store data directly but contain parity information that can be used to &lt;strong&gt;reconstruct a failed drive&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cache Pool:&lt;/strong&gt; An optional, high-speed SSD-based cache. It&amp;rsquo;s often used to temporarily store data before it&amp;rsquo;s moved to the slower hard drives in the array. This significantly improves performance for applications that have frequent read/write operations. Developers can use this for their databases or other I/O-intensive services to speed things up.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;use-cases-for-developers&#34;&gt;Use Cases for Developers&lt;/h2&gt;
&lt;p&gt;Developers can use Unraid for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Local Development Environment:&lt;/strong&gt; Host your code repositories, databases, and application servers in a single, controlled environment.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CI/CD Pipeline:&lt;/strong&gt; Run self-hosted runners for Gitlab CI, Jenkins, or other CI/CD platforms.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media and Data Hoarding:&lt;/strong&gt; Use it as a personal media server with Plex or as a centralized backup destination for your projects.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker:&lt;/strong&gt; Leverage Docker containers for microservices, development environments, or isolated applications.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Virtual Machines:&lt;/strong&gt; Run various operating systems, like Windows or different Linux distributions, for testing or specialized development tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Remember that you can even develop your own &lt;strong&gt;Community Applications&lt;/strong&gt; and share them with others, like I did, with the templates found at &lt;a href=&#34;https://github.com/glls/Docker-Templates-Unraid&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/glls/Docker-Templates-Unraid&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Digital Archivist&#39;s Toolkit: Navidrome, Picard, and Supersonic for the Modern Music Collection</title>
      <link>http://localhost:1313/post/music/</link>
      <pubDate>Sun, 17 Aug 2025 14:17:57 +0300</pubDate>
      <guid>http://localhost:1313/post/music/</guid>
      <description>&lt;p&gt;In an age dominated by music streaming, a dedicated community of audiophiles and music lovers is preserving the art of the personal music collection. They are digital archivists, meticulously curating libraries of high-fidelity audio files, from rare vinyl rips to lossless studio masters. This pursuit, however, requires more than just a hard drive full of music; it demands a robust set of tools for organization, management, and playback. This is where the triumvirate of &lt;strong&gt;Navidrome&lt;/strong&gt;, &lt;strong&gt;Picard&lt;/strong&gt;, and &lt;strong&gt;Supersonic&lt;/strong&gt; comes into play, offering a powerful, open-source ecosystem for the serious collector.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;navidrome-your-personal-streaming-service&#34;&gt;Navidrome: Your Personal Streaming Service&lt;/h3&gt;
&lt;p&gt;At the heart of the modern self-hosted music setup lies a server (&lt;a href=&#34;http://localhost:1313/post/unraid/&#34;&gt;UNRAID&lt;/a&gt; in my case), and &lt;a href=&#34;https://www.navidrome.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Navidrome&lt;/a&gt; has emerged as a favorite in this space. Imagine having your very own Spotify, but with your meticulously curated library instead of a corporate-controlled catalog. That&amp;rsquo;s the essence of Navidrome. It is a lightweight, open-source music server that allows you to stream your personal music collection from any web browser or mobile device.&lt;/p&gt;
&lt;p&gt;Unlike commercial streaming services that can abruptly alter their catalogs or downgrade audio quality, Navidrome gives you complete control. It&amp;rsquo;s designed to handle very large music collections, with developers testing it on libraries of up to 900,000 songs. Its resource-efficient nature means it can run smoothly on low-powered devices like a Raspberry Pi, making it accessible to a wide range of users.&lt;/p&gt;
&lt;p&gt;Navidrome&amp;rsquo;s web interface is modern, responsive, and easy to navigate. It automatically scans your library for new files and changes, ensuring your collection is always up-to-date. But its true power lies in its compatibility. Navidrome supports the Subsonic API, a de facto standard for music server clients. This means you can use a variety of third-party mobile apps for iOS and Android, such as DSub, Substreamer, or Ultrasonic, to access your music on the go. This flexibility, combined with features like on-the-fly transcoding to save mobile data and a multi-user system for family and friends, makes Navidrome the cornerstone of a personal music cloud.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;musicbrainz-picard-the-meticulous-librarian&#34;&gt;MusicBrainz Picard: The Meticulous Librarian&lt;/h3&gt;
&lt;p&gt;Before you can stream your music with Navidrome, it needs to be properly organized and tagged. This is where &lt;a href=&#34;https://picard.musicbrainz.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MusicBrainz Picard&lt;/a&gt; steps in as an indispensable tool. A common problem with digital music is inconsistent or missing metadata—the information embedded in audio files like song title, artist, album, and year. A music collection without good metadata is a chaotic mess, a digital junkyard of &amp;ldquo;Track 01&amp;rdquo; files.&lt;/p&gt;
&lt;p&gt;Picard is a cross-platform music tagger that uses the massive, community-maintained MusicBrainz database to identify and tag your audio files with unparalleled accuracy. Its most impressive feature is its use of &lt;strong&gt;AcoustID audio fingerprints&lt;/strong&gt;. This technology allows Picard to &amp;ldquo;listen&amp;rdquo; to a song and identify it based on its unique sonic signature, even if the file has no existing metadata. This is a game-changer for cleaning up poorly organized libraries.&lt;/p&gt;
&lt;p&gt;Beyond identification, Picard offers powerful tools for organization. It can automatically rename your files and sort them into a logical folder structure based on your preferences. For example, you can script it to create folders structured like &amp;ldquo;Artist/Album/Track Number - Title.&amp;rdquo; Picard also finds and downloads the correct cover art, ensuring your music library is not only organized but also visually appealing. By using Picard, you transform a disorganized jumble of files into a clean, searchable, and aesthetically pleasing collection.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;supersonic-the-sleek-desktop-client&#34;&gt;Supersonic: The Sleek Desktop Client&lt;/h3&gt;
&lt;p&gt;While Navidrome&amp;rsquo;s web interface is excellent, many users prefer a dedicated desktop application for their music playback. This is where &lt;a href=&#34;https://github.com/dweymouth/supersonic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Supersonic&lt;/a&gt; shines. Supersonic is a lightweight, full-featured desktop client designed specifically for self-hosted music servers that support the Subsonic API, including Navidrome.&lt;/p&gt;
&lt;p&gt;Supersonic provides a native desktop experience that is often faster and more responsive than a web browser. It&amp;rsquo;s built with modern technologies and offers a clean, intuitive user interface that makes browsing your music library a pleasure. It includes a built-in 15-band graphic equalizer, allowing you to fine-tune your audio playback. You can also scrobble plays to your server, download songs, albums, or playlists for offline listening, and even access synced lyrics.&lt;/p&gt;
&lt;p&gt;Supersonic addresses a key pain point for self-hosted music enthusiasts: the lack of a high-quality, cross-platform desktop client. While many web interfaces are functional, a native application can provide a more polished and integrated experience. Supersonic fills this gap perfectly, acting as a bridge between your local computer and your personal music server. It allows you to enjoy the best of both worlds: the centralized control and accessibility of a server with the performance and features of a dedicated desktop player.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;the-synergy-of-the-trio&#34;&gt;The Synergy of the Trio&lt;/h3&gt;
&lt;p&gt;The true power of Navidrome, Picard, and Supersonic is not in their individual capabilities but in their synergy. They form a complete workflow for the digital music archivist. First, you use &lt;strong&gt;MusicBrainz Picard&lt;/strong&gt; to clean and tag your music files, ensuring they are perfectly organized and contain rich metadata. Next, you point your &lt;strong&gt;Navidrome&lt;/strong&gt; server to this beautifully curated library. Navidrome then indexes the files and makes them available for streaming anywhere in the world. Finally, you can use &lt;strong&gt;Supersonic&lt;/strong&gt; on your desktop to seamlessly connect to your Navidrome server, giving you a powerful and feature-rich way to listen to your music collection.&lt;/p&gt;
&lt;p&gt;This trio of tools represents a significant shift from the corporate-driven streaming paradigm back to a model of personal ownership and control. By leveraging these open-source projects, music lovers can build a system that is tailored to their needs, respects their privacy, and ensures their music collection remains a vibrant, well-organized part of their digital life.&lt;/p&gt;
&lt;p&gt;As a bonus for Android users, the mobile player &lt;a href=&#34;https://github.com/CappielloAntonio/tempo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tempo&lt;/a&gt; is a highly-regarded and robust alternative, offering a seamless and beautiful interface for accessing your Navidrome library on the go.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wireguard: A Better VPN</title>
      <link>http://localhost:1313/post/wireguard/</link>
      <pubDate>Sat, 27 Apr 2024 18:34:13 +0300</pubDate>
      <guid>http://localhost:1313/post/wireguard/</guid>
      <description>&lt;p&gt;Virtual Private Networks &lt;a href=&#34;https://en.wikipedia.org/wiki/Virtual_private_network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;(VPNs)&lt;/a&gt; are essential tools for protecting your online privacy and security. But traditional VPNs can sometimes be slow and bog down your connection. &lt;a href=&#34;https://www.wireguard.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WireGuard&lt;/a&gt; is a new, innovative VPN protocol that offers several advantages over traditional options, it has a cool logo too 😎.&lt;/p&gt;
&lt;p&gt;WireGuard is much simpler and leaner than older VPN protocols. This means it&amp;rsquo;s faster and more efficient, using fewer resources and providing a smoother online experience. On top of that, WireGuard prioritizes strong security. It utilizes modern cryptographic techniques to keep your data safe and encrypted.&lt;/p&gt;
&lt;p&gt;WireGuard is also easy to set up and use. It&amp;rsquo;s available on a wide range of platforms, including Linux, macOS, Windows, Android, and iOS. You can quickly configure WireGuard to connect to a VPN server and start protecting your online activities.&lt;/p&gt;
&lt;p&gt;I installed Wireguard on my &lt;a href=&#34;https://dietpi.com/docs/software/vpn/#wireguard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Raspberry Pi 4 powered by DietPi&lt;/a&gt; and connected to my selfhosted VPN server in just a few minutes on my Macbook Air and on my Android powered phone (Motorola G54). Check the available versions &lt;a href=&#34;https://www.wireguard.com/install/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;, there is one for everyone, even iOS and OpenWRT!.&lt;/p&gt;
&lt;p&gt;The connection was fast and reliable, with minimal impact on my internet speed. The simplicity and performance impressed me greatly, allowing seamless access to both my &lt;a href=&#34;https://unraid.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UNRAID server&lt;/a&gt; and &lt;a href=&#34;https://www.synology.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Synology NAS&lt;/a&gt; on my private LAN.&lt;/p&gt;
&lt;p&gt;UPDATE: My epic shiny router (Fritz!Box) has builtin support for Wireguard! Check about the valid configurations &lt;a href=&#34;https://en.avm.de/service/vpn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Image and Video Cheat Sheet</title>
      <link>http://localhost:1313/post/image-video-cheatsheet/</link>
      <pubDate>Tue, 12 Mar 2024 02:40:22 +0300</pubDate>
      <guid>http://localhost:1313/post/image-video-cheatsheet/</guid>
      <description>


&lt;details class=&#34;print:hidden xl:hidden&#34; &gt;
  &lt;summary&gt;Table of Contents&lt;/summary&gt;
  &lt;div class=&#34;text-sm&#34;&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#image-manipulation&#34;&gt;Image Manipulation&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#resize-images&#34;&gt;Resize Images&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#remove-background&#34;&gt;Remove background&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#extent-canvas-size-with-transparency&#34;&gt;Extent canvas size with transparency&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#looping-gifs-ever-wanted-a-gif-to-play-endlessly&#34;&gt;Looping GIFs: Ever wanted a GIF to play endlessly?&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#creating-gifs-with-transparency-want-a-gif-with-clear-backgrounds&#34;&gt;Creating GIFs with Transparency: Want a GIF with clear backgrounds?&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#png-optimization&#34;&gt;PNG optimization&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#svg-to-png-conversion&#34;&gt;SVG to PNG Conversion&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#audio-manipulation&#34;&gt;Audio Manipulation&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#generate-audio-from-console&#34;&gt;Generate audio from console&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#video-manipulation&#34;&gt;Video Manipulation&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#extract-a-video-segment-from-a-larger-video-file-using-ffmpeg&#34;&gt;Extract a video segment from a larger video file using &lt;code&gt;ffmpeg&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#downloading-videos&#34;&gt;Downloading Videos&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#playing-a-video-stream-from-the-command-line-with-mpv&#34;&gt;Playing a video stream from the command line with &lt;code&gt;mpv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/div&gt;
&lt;/details&gt;

&lt;p&gt;The command line might seem intimidating, but it offers hidden gems for everyday tasks. Today, we&amp;rsquo;ll explore its power for image and video conversions, giving you more control over your media files for future reference or projects.&lt;/p&gt;
&lt;h2 id=&#34;image-manipulation&#34;&gt;Image Manipulation&lt;/h2&gt;
&lt;p&gt;Here are some examples of how to manipulate images with ImageMagick&amp;rsquo;s tools, as always there are tons of options available, so make sure to check the &lt;a href=&#34;https://imagemagick.org/script/convert.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TIP: parameter order matters a lot in ImageMagick&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;resize-images&#34;&gt;Resize Images&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;magick input.png -resize 100x200 output.jpg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mogrify -resize 50% *.png
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;remove-background&#34;&gt;Remove background&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/Usage/masking/#bg_remove&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ImageMagick Examples&lt;/a&gt;&lt;br&gt;
To remove the black background from an image, use the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; magick input.png -fuzz 5% -transparent black out.png
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;extent-canvas-size-with-transparency&#34;&gt;Extent canvas size with transparency&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;convert input.png -background none -gravity center -extent 512x512 output.png
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mogrify -background none -gravity center -extent 512x512 *.png
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;looping-gifs-ever-wanted-a-gif-to-play-endlessly&#34;&gt;Looping GIFs: Ever wanted a GIF to play endlessly?&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;convert -delay &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; -loop &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; nonloopingImage.gif loopingImage.gif
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This creates a looping version of &lt;code&gt;nonloopingImage.gif&lt;/code&gt; with a delay of 20 milliseconds between frames. Adjust the delay for faster or slower playback. The &lt;code&gt;-loop 0&lt;/code&gt; sets unlimited loops.&lt;/p&gt;
&lt;h3 id=&#34;creating-gifs-with-transparency-want-a-gif-with-clear-backgrounds&#34;&gt;Creating GIFs with Transparency: Want a GIF with clear backgrounds?&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;magick -delay &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt; -loop &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; -dispose previous *.png hands.gif
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command combines all PNG files in the current directory (replace &lt;code&gt;*.png&lt;/code&gt; with specific filenames if needed) into a GIF named &lt;code&gt;hands.gif&lt;/code&gt;. The &lt;code&gt;-delay 100&lt;/code&gt; sets a delay of 100 milliseconds, &lt;code&gt;-loop 0&lt;/code&gt; enables infinite looping, and &lt;code&gt;-dispose&lt;/code&gt; previous ensures transparency in the final GIF.&lt;/p&gt;
&lt;h3 id=&#34;png-optimization&#34;&gt;PNG optimization&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;optipng&lt;/code&gt; is a command-line tool that optimizes PNG images to reduce file size without losing quality. Here&amp;rsquo;s how to use it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;optipng -strip all image.png
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;svg-to-png-conversion&#34;&gt;SVG to PNG Conversion&lt;/h3&gt;
&lt;p&gt;Scalable Vector Graphics (SVG) are perfect for logos and icons, but sometimes you need a PNG image. Here&amp;rsquo;s how to convert SVG to PNG using &lt;code&gt;rsvg-convert&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rsvg-convert -h &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt; icon.svg &amp;gt; icon-32.png
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command converts &lt;code&gt;icon.svg&lt;/code&gt; to a PNG named &lt;code&gt;icon-32.png&lt;/code&gt; with a height of 32 pixels. Replace 32 with your desired pixel height or width for a specific aspect ratio.&lt;/p&gt;
&lt;h2 id=&#34;audio-manipulation&#34;&gt;Audio Manipulation&lt;/h2&gt;
&lt;h3 id=&#34;generate-audio-from-console&#34;&gt;Generate audio from console&lt;/h3&gt;
&lt;p&gt;Play a sine wave at 234Hz for 5 seconds using the play command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;play -n synth &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; sin &lt;span class=&#34;m&#34;&gt;234&lt;/span&gt; hz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here&amp;rsquo;s a breakdown of the options used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; This option tells play to play the sound only once (for 5 seconds in this case).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;synth&lt;/code&gt; This specifies that we want to generate a synthesized sound.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5&lt;/code&gt; This is the duration in seconds for which the sound will be played.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sin&lt;/code&gt; This keyword tells play to generate a sine wave.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;234 hz&lt;/code&gt; This defines the frequency of the sine wave as 234 Hertz.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure you have the &lt;code&gt;play&lt;/code&gt; command from &lt;a href=&#34;https://software.umich.edu/titles/sox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SoX&lt;/a&gt; installed on your system for this to work.&lt;/p&gt;
&lt;h2 id=&#34;video-manipulation&#34;&gt;Video Manipulation&lt;/h2&gt;
&lt;h3 id=&#34;extract-a-video-segment-from-a-larger-video-file-using-ffmpeg&#34;&gt;Extract a video segment from a larger video file using &lt;code&gt;ffmpeg&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fmpeg -i Untitled.mp3 -t 00:00:09 -acodec copy output.mp3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t 00:00:09&lt;/code&gt;: set output duration to 9 seconds. Here, 00 represents hours and minutes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-acodec copy&lt;/code&gt;: copy the audio stream from the input file without re-encoding it. This is efficient if you don&amp;rsquo;t need to modify the audio quality.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall, this command extracts a 9-second segment from your &lt;code&gt;Untitled.mp3&lt;/code&gt; file and saves it as &lt;code&gt;output.mp3&lt;/code&gt; while preserving the original audio quality.&lt;/p&gt;
&lt;h3 id=&#34;downloading-videos&#34;&gt;Downloading Videos&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ytdl-org/youtube-dl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;youtube-dl&lt;/a&gt; works on OS X, Linux and Windows, and can download videos in any format YouTube provides.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.downloadhelper.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Video DownloadHelper&lt;/a&gt; is a Firefox/Chrome extension for downloading videos from many sites with minimum effort.&lt;/p&gt;
&lt;h3 id=&#34;playing-a-video-stream-from-the-command-line-with-mpv&#34;&gt;Playing a video stream from the command line with &lt;code&gt;mpv&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mpv --cache-on-disk stream_93b9d36741fe2f46.m3u
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check the official page for more info &lt;a href=&#34;https://mpv.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://mpv.io/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH Cheatsheet</title>
      <link>http://localhost:1313/post/ssh-cheatsheet/</link>
      <pubDate>Mon, 12 Feb 2024 09:03:02 +0300</pubDate>
      <guid>http://localhost:1313/post/ssh-cheatsheet/</guid>
      <description>&lt;p&gt;SSH, or Secure Shell, is a fundamental tool for securely connecting to and managing remote servers. Whether you&amp;rsquo;re a seasoned system administrator or just starting to explore the command line, having a solid grasp of SSH commands is essential. This cheatsheet provides a quick reference for the most commonly used SSH operations.&lt;/p&gt;
&lt;h2 id=&#34;connecting-to-a-server&#34;&gt;Connecting to a Server&lt;/h2&gt;
&lt;p&gt;The basic syntax for connecting to a server with SSH is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh username@server_address &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-p port_number&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;username&lt;/code&gt;:  Your username on the remote server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_address&lt;/code&gt;:  The IP address or hostname of the server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;port_number&lt;/code&gt;:  The port number used by the SSH server.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;password-vs-key-based-authentication&#34;&gt;Password vs. Key-Based Authentication&lt;/h2&gt;
&lt;p&gt;You can connect to a server using a password or a public/private key pair. Key-based authentication is generally considered more secure as it eliminates the need to transmit passwords over the network.&lt;/p&gt;
&lt;h2 id=&#34;basic-file-transfer&#34;&gt;Basic File Transfer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;scp (Secure Copy):&lt;/strong&gt;  Used to securely copy files between your local machine and the remote server.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To copy a file from the remote server to your local machine:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scp username@server_address:/path/to/file local_destination
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;To copy a file from your local machine to the remote server:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scp local_file username@server_address:/path/to/destination
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;remote-commands&#34;&gt;Remote Commands&lt;/h2&gt;
&lt;p&gt;You can execute commands on the remote server directly from your local terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh username@server_address &lt;span class=&#34;s1&#34;&gt;&amp;#39;command_to_execute&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;command_to_execute&lt;/code&gt;:  The command you want to run on the remote server.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;understanding-the-ssh-directory&#34;&gt;Understanding the .ssh Directory&lt;/h2&gt;
&lt;p&gt;The hidden directory  &lt;code&gt;~/.ssh&lt;/code&gt; (on Unix-based systems) stores SSH configuration files specific to your user account. It&amp;rsquo;s typically not created by default, but SSH will create it if it&amp;rsquo;s missing when you first use a key-based authentication or configure the client. Common files you might find in this directory include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;id_rsa (private key):&lt;/strong&gt; This file contains your private SSH key, used for key-based authentication. It should be kept secret and have strict permissions to prevent unauthorized access.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;id_rsa.pub (public key):&lt;/strong&gt; This public key file corresponds to your private key and can be added to authorized keys on servers you want to connect to.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;config (SSH configuration file):&lt;/strong&gt; This file allows you to define connection options for specific servers or set global defaults for SSH.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;exploring-the-ssh-config-file&#34;&gt;Exploring the SSH Config File&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;config&lt;/code&gt; file within the &lt;code&gt;.ssh&lt;/code&gt; directory is a powerful tool for customizing SSH connections. It uses a simple format with options and arguments to define settings. Here are some common uses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Host definitions:&lt;/strong&gt; You can create sections for specific servers (identified by hostname or IP address) and define options for those connections, such as port, username, and IdentityFile (path to your private key).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Global options:&lt;/strong&gt; You can set default settings for all SSH connections, like preferred encryption ciphers or preferred authentication methods.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aliases:&lt;/strong&gt; You can define aliases for servers to simplify connection commands. For example, you could create an alias for a server with a long hostname to make connecting easier.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ssh-tunneling&#34;&gt;SSH Tunneling&lt;/h2&gt;
&lt;p&gt;SSH tunneling, also known as SSH port forwarding, is a powerful feature that allows you to create secure connections between your local machine and a remote server. It essentially creates an encrypted tunnel through which you can forward traffic between different ports. This can be useful for various purposes, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Securely accessing remote services:&lt;/strong&gt; If a server offers a service on a non-standard port (for example, a web server on port 8080 instead of the usual port 80), you can use SSH tunneling to securely access it as if it were running on the standard port on your local machine.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tunneling traffic through firewalls:&lt;/strong&gt; Firewalls might restrict access to certain ports. By tunneling traffic through an SSH connection, you can bypass these restrictions and access the desired service. (&lt;strong&gt;Note:&lt;/strong&gt; This should only be done with proper authorization and caution)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Creating SOCKS proxies:&lt;/strong&gt; SSH tunnels can be configured to function as SOCKS proxies, allowing you to route all your internet traffic through the secure SSH connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are two main types of SSH tunneling:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Local Port Forwarding:&lt;/strong&gt; This forwards traffic from a specific port on your local machine to a port on the remote server. Here&amp;rsquo;s an example:&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s say you want to securely access a web server running on port 8080 on a remote server. You can use local port forwarding to map port 8080 on the remote server to a different port (e.g., port 8000) on your local machine. By accessing &lt;code&gt;http://localhost:8000&lt;/code&gt; in your web browser, the traffic will be securely tunneled through the SSH connection and reach the web server on the remote machine.&lt;/p&gt;
&lt;p&gt;The command for this scenario would be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh -L 8000:localhost:8080 username@server_address
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;: Flag for local port forwarding.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;8000&lt;/code&gt;: Local port on your machine where you want to access the service.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localhost:8080&lt;/code&gt;: The destination on the remote server (localhost refers to the remote server itself in this case).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username&lt;/code&gt;: Your username on the remote server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_address&lt;/code&gt;: The IP address or hostname of the remote server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Remote Port Forwarding (Reverse Tunneling):&lt;/strong&gt; This forwards traffic from a port on the remote server to a specific port on another machine on your network. This can be useful for exposing services running on the remote server to other machines on your local network.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example:&lt;/p&gt;
&lt;p&gt;Imagine you have a database server running on a remote server behind a firewall, but you need to access it from your local machine. You can set up remote port forwarding to expose the database port (e.g., port 3306) on the remote server to a different port (e.g., port 5432) on your local machine. This allows you to connect to the database server using your local database client as if it were running locally.&lt;/p&gt;
&lt;p&gt;The command for this scenario would be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh -R 5432:localhost:3306 username@server_address
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: Flag for remote port forwarding.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5432&lt;/code&gt;: Port on your local machine that will be forwarded to the remote server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localhost:3306&lt;/code&gt;: The destination on the remote server (localhost refers to the remote server itself in this case).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username&lt;/code&gt;: Your username on the remote server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_address&lt;/code&gt;: The IP address or hostname of the remote server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are just a couple of basic examples of SSH tunneling. With some exploration, you&amp;rsquo;ll find many other use cases for this versatile tool. Remember, it&amp;rsquo;s important to understand the security implications before implementing SSH tunnels, especially when bypassing firewalls.&lt;/p&gt;
&lt;h2 id=&#34;ssh-commands&#34;&gt;SSH Commands&lt;/h2&gt;
&lt;p&gt;Here are some common SSH commands and their use cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh-keygen&lt;/code&gt;: Generates a new SSH key pair.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh-copy-id user@host&lt;/code&gt;: Copies your public key to a remote server&amp;rsquo;s authorized keys file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh-agent&lt;/code&gt;: Manages your SSH keys and allows you to enter passphrases only once.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh-add&lt;/code&gt;: Adds private keys to the SSH agent.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -o PubkeyAuthentication=no user@host&lt;/code&gt;: Disables public key authentication for a specific SSH session.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh-keygen -f &amp;quot;/home/user/.ssh/known_hosts&amp;quot; -R &amp;quot;192.168.1.1&amp;quot;&lt;/code&gt; : Removes a specific host entry from the known_hosts file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -J jump_host user@target_host&lt;/code&gt;: Connects to a target host via a jump host (SSH bastion).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tips-and-tricks&#34;&gt;Tips and Tricks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;ssh&lt;/code&gt; and then &lt;code&gt;tmux&lt;/code&gt; if you want to persist your session in case of network interruptions. This way, you can reconnect to your session and continue where you left off.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use config aliases to simplify your SSH connections. For example, you can define an alias for a server with a long hostname and non-standard port to save time typing the connection command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always use strong, unique passwords or passphrase-protected SSH keys to secure your connections. Avoid using default usernames like &amp;ldquo;root&amp;rdquo; and disable password-based authentication if possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tunneling through SSH can be a powerful tool, espessially for developers, but it should be used responsibly and with caution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remember to always keep your SSH keys secure and avoid sharing them with unauthorized users. Regularly update your keys and rotate them if necessary to maintain a high level of security.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Console snippets</title>
      <link>http://localhost:1313/post/console-snippets/</link>
      <pubDate>Mon, 29 Jan 2024 18:30:00 +0300</pubDate>
      <guid>http://localhost:1313/post/console-snippets/</guid>
      <description>


&lt;details class=&#34;print:hidden xl:hidden&#34; &gt;
  &lt;summary&gt;Table of Contents&lt;/summary&gt;
  &lt;div class=&#34;text-sm&#34;&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#basic-commands&#34;&gt;Basic commands&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#navigation&#34;&gt;Navigation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#file-manipulation&#34;&gt;File manipulation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#permissions&#34;&gt;Permissions&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#system-information&#34;&gt;System Information&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#process-management&#34;&gt;Process Management&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#help-and-man-pages&#34;&gt;Help and Man Pages&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#bonus&#34;&gt;Bonus&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#one-liners&#34;&gt;One liners&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#file-and-directory-manipulation&#34;&gt;File and directory manipulation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#system-administration&#34;&gt;System Administration&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#network-tools&#34;&gt;Network Tools&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#specific-snippets&#34;&gt;Specific snippets&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#miscellaneous-tips&#34;&gt;Miscellaneous tips&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/div&gt;
&lt;/details&gt;

&lt;p&gt;The &lt;code&gt;console&lt;/code&gt; offers a powerful way to interact with your system and increase your productivity.&lt;br&gt;
Most snippets work in both Linux and MacOS terminals.&lt;br&gt;
Here are some generic snippets to get you started:&lt;/p&gt;
&lt;h2 id=&#34;basic-commands&#34;&gt;Basic commands&lt;/h2&gt;
&lt;h3 id=&#34;navigation&#34;&gt;Navigation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd &amp;lt;directory&amp;gt;&lt;/code&gt;: Change directory. (e.g. &lt;code&gt;cd Documents&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;: Print Working Directory (shows your current location)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;: List directory contents (-lah &amp;ndash;color for details and color)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir &amp;lt;directory&amp;gt;&lt;/code&gt;: Create a new directory&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;file-manipulation&#34;&gt;File manipulation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;touch &amp;lt;filename&amp;gt;&lt;/code&gt;: Create an empty file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat &amp;lt;filename&amp;gt;&lt;/code&gt;: Display file contents&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp &amp;lt;source&amp;gt; &amp;lt;destination&amp;gt;&lt;/code&gt;: Copy a file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv &amp;lt;source&amp;gt; &amp;lt;destination&amp;gt;&lt;/code&gt;: Move/Rename a file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm &amp;lt;filename&amp;gt;&lt;/code&gt;: Delete a file (use with caution!)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;permissions&#34;&gt;Permissions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chmod &amp;lt;permissions&amp;gt; &amp;lt;filename&amp;gt;&lt;/code&gt;: Change file permissions (owner, group, others)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chown &amp;lt;owner&amp;gt;:&amp;lt;group&amp;gt; &amp;lt;filename&amp;gt;&lt;/code&gt;: Change file owner (with optional group)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chgrp &amp;lt;group&amp;gt; &amp;lt;filename&amp;gt;&lt;/code&gt;: Change file group&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo &amp;lt;command&amp;gt;&lt;/code&gt;: Run a command as superuser (root)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;su - &amp;lt;username&amp;gt;&lt;/code&gt;: Switch to another user account&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;system-information&#34;&gt;System Information&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;whoami&lt;/code&gt;: Shows your current username&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;: Shows who is logged in and what they are doing&lt;/li&gt;
&lt;li&gt;&lt;code&gt;df&lt;/code&gt;: Show disk usage (-hT human-readable with filesystem type)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blkid&lt;/code&gt;: Show block device information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;free -h&lt;/code&gt;: Show available memory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uname -a&lt;/code&gt;: Show detailed system information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lscpu&lt;/code&gt;: Show CPU information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lsb_release -a&lt;/code&gt;: Show Linux distribution information&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;process-management&#34;&gt;Process Management&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ps aux&lt;/code&gt;: List all running processes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;top&lt;/code&gt;: Monitor system resources and processes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill &amp;lt;PID&amp;gt;&lt;/code&gt;: Kill a process by its ID (-9 for force kill)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;help-and-man-pages&#34;&gt;Help and Man Pages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;man &amp;lt;command&amp;gt;&lt;/code&gt;: Get help on a specific command (detailed manual page)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help&lt;/code&gt;: Get a list of built-in shell commands&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whatis &amp;lt;command&amp;gt;&lt;/code&gt;: Get a brief description of a command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alias&lt;/code&gt; : List all aliases&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bonus&#34;&gt;Bonus&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;history&lt;/code&gt;: Show command history (-c to clean)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!!&lt;/code&gt;: Repeat the last command (sudo !! to repeat last command as sudo)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt;: Exit the terminal (or CTRL-D)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are just a few basic snippets. There&amp;rsquo;s a vast amount of functionality available in the Linux console. Explore the &lt;code&gt;man&lt;/code&gt; pages for in-depth information on specific commands.&lt;/p&gt;
&lt;h2 id=&#34;one-liners&#34;&gt;One liners&lt;/h2&gt;
&lt;p&gt;Console one-liners are powerful commands that condense complex tasks into a single line&lt;/p&gt;
&lt;h3 id=&#34;file-and-directory-manipulation&#34;&gt;File and directory manipulation&lt;/h3&gt;
&lt;p&gt;Search and replace text across all files in a directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find . -type f -exec sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/old_text/new_text/g&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Count lines in all files within a directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find . -type f -exec wc -l &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{sum += $1} END {print sum}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Change permissions of all files in a directory (recursively):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find -type f -exec chmod &lt;span class=&#34;m&#34;&gt;644&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Change permissions of all directories in a directory (recursively):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find -type d -exec chmod &lt;span class=&#34;m&#34;&gt;755&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Convert all JPGs in current directory to PNGs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; file in *.jpg&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; convert &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/.jpg/.png&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Extract all ZIP files in a directory with correct folders&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find -type f -name *.zip -execdir unzip -o &lt;span class=&#34;s1&#34;&gt;&amp;#39;{}&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;system-administration&#34;&gt;System Administration&lt;/h3&gt;
&lt;p&gt;List all processes using more than 10% CPU:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ps aux &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{if ($3 &amp;gt; 10) print $2}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Find the largest file in a directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find . -type f -exec du -s &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -nr &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -n &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;network-tools&#34;&gt;Network Tools&lt;/h3&gt;
&lt;p&gt;Ping a website and display response time:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ping -c &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; google.com &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $7}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Download a file from a URL:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://example.com/file.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -O https://example.com/file.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scan a network for active hosts:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmap -sn 192.168.0.0/24
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scan many networks for active hosts and ports:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmap  192.168.33.0/24 192.168.42.0/24
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Remember:&lt;/strong&gt; Be cautious when using one-liners, especially those involving deletion or modification. Test them on a small scale before applying them broadly.&lt;/p&gt;
&lt;p&gt;These are just a few examples. Explore the web for more advanced one-liners using tools like &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, and &lt;code&gt;sed&lt;/code&gt; for powerful text manipulation.&lt;/p&gt;
&lt;h2 id=&#34;specific-snippets&#34;&gt;Specific snippets&lt;/h2&gt;
&lt;p&gt;Find and delete &lt;code&gt;.DS_Store&lt;/code&gt; files:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find . -type f -iname .DS_Store -exec rm -i &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resize &lt;a href=&#34;https://wiki.archlinux.org/title/tmpfs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tmpfs&lt;/a&gt; partition&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mount -o remount,size&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;4G,noatime /tmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fix &lt;code&gt;TMPDIR=/tmp cannot hold executables&lt;/code&gt; (partition possibly mounted with noexec)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mount -o remount,exec /tmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update secureboot keys after NVIDIA driver upgrade (for Ubuntu with secureboot enabled / dual boot)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo update-secureboot-policy --enroll-key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update outdated pip packages&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip list --outdated --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;freeze &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -v &lt;span class=&#34;s1&#34;&gt;&amp;#39;^\-e&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -d &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -f &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -n1 pip install -U
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Change display brightness with xrandr&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xrandr --output eDP --brightness 0.6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Turn keyboard &lt;code&gt;Scroll Lock&lt;/code&gt; on&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xset led named &lt;span class=&#34;s2&#34;&gt;&amp;#34;Scroll Lock&amp;#34;&lt;/span&gt; on
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update all git repositories under a folder, recursively&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find . -mindepth &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -maxdepth &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -type d -exec git  --git-dir&lt;span class=&#34;o&#34;&gt;={}&lt;/span&gt;/.git --work-tree&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;/&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; pull &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;miscellaneous-tips&#34;&gt;Miscellaneous tips&lt;/h2&gt;
&lt;p&gt;For the best terminal filemanager check the post:&lt;br&gt;
&lt;a href=&#34;http://localhost:1313/post/mc/&#34;&gt;MC: a commander like no other&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Ctrl + R&lt;/code&gt; to search through your command history&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Ctrl + C&lt;/code&gt; to cancel a running command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tmux&lt;/code&gt; and &lt;code&gt;htop&lt;/code&gt; are great tools for managing terminal sessions and monitoring system resources&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncdu&lt;/code&gt; is a great tool for analyzing disk usage&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQL Cheat Sheet</title>
      <link>http://localhost:1313/post/sql-cheatsheet/</link>
      <pubDate>Thu, 16 Nov 2023 19:23:33 +0300</pubDate>
      <guid>http://localhost:1313/post/sql-cheatsheet/</guid>
      <description>&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL&lt;/a&gt; stands for Structured Query Language. It&amp;rsquo;s a powerful and widely-used language specifically designed for managing data stored in relational databases.&lt;/p&gt;
&lt;p&gt;There are several situations where using SQL directly might be preferable to using an Object-Relational Mapping tool &lt;a href=&#34;https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;(ORM)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;performance&#34;&gt;Performance&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Complex Queries&lt;/strong&gt;: While ORMs simplify complex queries, they often translate them into multiple underlying SQL statements. For very intricate queries, writing raw SQL can give you more control and potentially improve performance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database-Specific Features&lt;/strong&gt;: ORMs sometimes have limitations when dealing with functionalities specific to a particular database engine. If you need to leverage advanced features offered by your database (like stored procedures or custom functions), using raw SQL allows you to interact with them directly.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;customization-and-control&#34;&gt;Customization and Control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fine-Tuning Queries&lt;/strong&gt;: SQL grants you complete control over the query structure. You can optimize queries for specific use cases and databases, something that might be limited with an ORM&amp;rsquo;s abstraction layer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database Schema Changes&lt;/strong&gt;: If your database schema undergoes frequent modifications, relying solely on an ORM might require frequent updates to your object mappings. With SQL, you can directly adapt your queries to the evolving schema.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Error Diagnostics&lt;/strong&gt;: When errors occur with ORM-generated queries, it can be challenging to pinpoint the exact cause. With raw SQL, you can directly see the query being executed, making it easier to diagnose and fix issues.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Understanding Database Behavior&lt;/strong&gt;: For developers who want a deeper understanding of how the database interprets and executes queries, using SQL provides greater transparency into the underlying processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;
&lt;p&gt;Here are the basic SQL commands that form the foundation for interacting with relational databases:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;SELECT:&lt;/strong&gt; This is the most fundamental command used to retrieve data from a database table. You can specify the columns (fields) you want to retrieve and optionally use a WHERE clause to filter the results based on certain conditions.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;country&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GR&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This query selects the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt; columns from the &lt;code&gt;users&lt;/code&gt; table, but only for users where the &lt;code&gt;country&lt;/code&gt; is &amp;lsquo;GR&amp;rsquo;.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;INSERT:&lt;/strong&gt; This command allows you to insert new data into a table. You specify the table name and the values you want to insert for each column.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;products&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;category&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;shirt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;clothing&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This query inserts a new row into the &lt;code&gt;products&lt;/code&gt; table with the following details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;: shirt&lt;/li&gt;
&lt;li&gt;&lt;code&gt;price&lt;/code&gt;: 9.99&lt;/li&gt;
&lt;li&gt;&lt;code&gt;category&lt;/code&gt;: clothing&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; This command is used to modify existing data in a table. You specify the table name, the changes you want to make, and a WHERE clause to target specific rows for the update.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;new_email@example.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This query updates the &lt;code&gt;email&lt;/code&gt; address for the customer with &lt;code&gt;id&lt;/code&gt; equal to 10 in the &lt;code&gt;customers&lt;/code&gt; table.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;DELETE:&lt;/strong&gt; This command allows you to remove rows from a table. Similar to UPDATE, you can use a WHERE clause to filter the rows you want to delete.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;DELETE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;completed&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order_date&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2024-01-01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This query deletes all orders from the &lt;code&gt;orders&lt;/code&gt; table that are marked as &amp;ldquo;completed&amp;rdquo; and have an order date before January 1st, 2024.&lt;/p&gt;
&lt;p&gt;These are just a few basic SQL commands to get you started. As you learn more, you&amp;rsquo;ll discover commands for more complex tasks like joining data from multiple tables, grouping results, and using aggregate functions.&lt;/p&gt;
&lt;p&gt;Check these official documentation resources for more in-depth information on SQL:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL Documentation&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://dev.mysql.com/doc/refman/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MySQL Reference Manual&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.sqlite.org/docs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQLite Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;joins&#34;&gt;JOINs&lt;/h2&gt;
&lt;p&gt;JOINs are a fundamental concept in relational databases that allow you to combine data from multiple tables based on a shared field. They are essential for retrieving related information across different tables.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here&amp;rsquo;s a breakdown of the basics about JOINs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose:&lt;/strong&gt; JOINs enable you to retrieve data from multiple tables in a single query, establishing relationships between them. This eliminates the need to write separate queries and then manually combine the results.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Types of JOINs:&lt;/strong&gt; There are several types of JOINs, each serving a specific purpose:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Inner JOIN:&lt;/strong&gt; This retrieves records that exist in both tables based on the matching criteria. It&amp;rsquo;s the most common type of JOIN.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Left JOIN:&lt;/strong&gt; This includes all records from the left table (the table mentioned first in the JOIN clause) and matching records from the right table. Records from the right table with no match will have NULL values in the corresponding columns.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Right JOIN:&lt;/strong&gt; Similar to Left JOIN, but includes all records from the right table and matching records from the left table.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full JOIN:&lt;/strong&gt; This combines all records from both tables, including those with no match in the other table (represented by NULL values).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Imagine you have two tables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Customers:&lt;/strong&gt; Contains customer information like ID, name, and email.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Orders:&lt;/strong&gt; Stores order details like order ID, customer ID (foreign key referencing Customers.ID), and order amount.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To retrieve a list of customer names along with their total order amount, you can use an Inner JOIN:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SUM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order_amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_order_amount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Customers&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INNER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Orders&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customer_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;GROUP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT&lt;/code&gt;: This specifies the columns you want to retrieve.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c.name&lt;/code&gt;: Selects the customer name from the Customers table (aliased as &lt;code&gt;c&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SUM(o.order_amount) AS total_order_amount&lt;/code&gt;: Calculates the total order amount for each customer by summing the &lt;code&gt;order_amount&lt;/code&gt; from the Orders table (aliased as &lt;code&gt;o&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FROM Customers c&lt;/code&gt;: Specifies the Customers table as the source for customer data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INNER JOIN Orders o ON c.id = o.customer_id&lt;/code&gt;: Defines the JOIN operation.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INNER JOIN&lt;/code&gt;: This indicates an Inner JOIN.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Orders o&lt;/code&gt;: The Orders table is joined.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ON c.id = o.customer_id&lt;/code&gt;: This is the JOIN condition. It matches rows where the customer ID (&lt;code&gt;c.id&lt;/code&gt;) in the Customers table is equal to the customer ID (&lt;code&gt;o.customer_id&lt;/code&gt;) in the Orders table.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GROUP BY c.name&lt;/code&gt;: Groups the results by customer name for accurate total order amount calculation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This query will return a list of customer names and their corresponding total order amounts, effectively combining data from both tables using the JOIN.&lt;/p&gt;
&lt;h2 id=&#34;tips&#34;&gt;TIPS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use Comments:&lt;/strong&gt; SQL supports comments to document your queries. Use &lt;code&gt;--&lt;/code&gt; for single-line comments and &lt;code&gt;/* */&lt;/code&gt; for multi-line comments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Avoid SELECT * :&lt;/strong&gt; When writing queries, avoid using &lt;code&gt;SELECT *&lt;/code&gt; to retrieve all columns from a table. Instead, explicitly list the columns you need. This practice improves query performance and makes your code more maintainable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use Transactions:&lt;/strong&gt; When performing multiple operations that need to be executed together (like inserting data into multiple tables), wrap them in a transaction. This ensures that either all operations succeed or none of them are applied.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Backup Your Data:&lt;/strong&gt; Regularly back up your database to prevent data loss. Most database management systems provide tools or utilities to create backups.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Optimize Queries:&lt;/strong&gt; Use database tools to analyze query performance and optimize slow queries. Techniques like indexing, query caching, and query tuning can significantly improve database performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Practice Safe SQL:&lt;/strong&gt; Protect your database from SQL injection attacks by using parameterized queries or prepared statements. These techniques help prevent malicious code injection through user input.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;snippets&#34;&gt;Snippets&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The following queries use &lt;code&gt;information_schema&lt;/code&gt;, which is specific to MySQL and MariaDB. Other databases like PostgreSQL and SQLite use different system tables and commands for similar tasks.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;MySQL/MariaDB:&lt;/strong&gt;
To generate statements to convert tables in a database schema to the character set &lt;code&gt;utf8mb4&lt;/code&gt; with the collation &lt;code&gt;utf8mb4_unicode_ci&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CONCAT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ALTER TABLE &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alter_statement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;information_schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table_schema&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SCHEMA&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To retrieve information about tables and their estimated sizes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TABLE_SCHEMA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Database&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE_NAME&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ROUND&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATA_LENGTH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INDEX_LENGTH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;information_schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TABLES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;PostgreSQL:&lt;/strong&gt;
To get table sizes, use the &lt;code&gt;pg_catalog&lt;/code&gt; schema and built-in functions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;schemaname&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relname&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_size_pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_total_relation_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_catalog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pg_statio_user_tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;SQLite:&lt;/strong&gt;
SQLite does not store table size information in system tables, but you can estimate the database file size using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PRAGMA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;page_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PRAGMA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;page_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- Multiply page_count by page_size for total size in bytes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;backing-up-and-restoring-databases&#34;&gt;Backing Up and Restoring Databases&lt;/h2&gt;
&lt;p&gt;Backing up your database is crucial to prevent data loss in case of hardware failures, accidental deletions, or other disasters.&lt;/p&gt;
&lt;h3 id=&#34;backing-up-a-database&#34;&gt;Backing Up a Database&lt;/h3&gt;
&lt;p&gt;To back up a MySQL database, you can use the &lt;code&gt;mysqldump&lt;/code&gt; utility. Here&amp;rsquo;s an example command to back up a MySQL database:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mysqldump -u username -p database_name &amp;gt; backup.sql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command exports the database &lt;code&gt;database_name&lt;/code&gt; to a file named &lt;code&gt;backup.sql&lt;/code&gt;. You&amp;rsquo;ll be prompted to enter the password for the specified user (&lt;code&gt;username&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&#34;restoring-a-database&#34;&gt;Restoring a Database&lt;/h3&gt;
&lt;p&gt;To restore a database from a backup file, you can use the &lt;code&gt;mysql&lt;/code&gt; command. Here&amp;rsquo;s an example command to restore a MySQL database:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mysql -u username -p database_name &amp;lt; backup.sql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or you can source the backup file directly in the MySQL shell:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; backup.sql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;PostgreSQL Backup and Restore Options:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL offers several methods for backing up and restoring databases. Here&amp;rsquo;s an overview of the key tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pg_dump&lt;/code&gt; and &lt;code&gt;pg_restore&lt;/code&gt;:&lt;/strong&gt; These are the primary command-line utilities for managing backups.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pg_dump&lt;/code&gt; creates consistent backups of your database, including the schema and data. It&amp;rsquo;s suitable for both full and partial backups.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pg_restore&lt;/code&gt; is used to restore databases from backups created with &lt;code&gt;pg_dump&lt;/code&gt;. It allows for restoring entire databases or specific objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;psql&lt;/code&gt;:&lt;/strong&gt; While not the primary tool for full database restores, &lt;code&gt;psql&lt;/code&gt; can be used to execute individual SQL statements from a backup script containing CREATE TABLE and INSERT statements, offering some restore flexibility.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pg_basebackup&lt;/code&gt;:&lt;/strong&gt; This is a powerful utility specifically designed for creating online backups of PostgreSQL databases. It creates a consistent physical copy of the database cluster&amp;rsquo;s data files while the server remains operational. This allows for minimal downtime during backup processes and is often used for replication setups.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Choosing the Right Tool:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The best backup approach depends on your specific needs. Here&amp;rsquo;s a general guideline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Full Backups:&lt;/strong&gt; Use &lt;code&gt;pg_dump&lt;/code&gt; for scheduled full backups or &lt;code&gt;pg_basebackup&lt;/code&gt; for online backups with minimal downtime.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Partial Backups:&lt;/strong&gt; Use &lt;code&gt;pg_dump&lt;/code&gt; to target specific schemas or tables.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Restores:&lt;/strong&gt; Use &lt;code&gt;pg_restore&lt;/code&gt; for full database restores or &lt;code&gt;psql&lt;/code&gt; for limited restores involving specific SQL statements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Converting from MariaDB to PostgreSQL:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Forget everything and use &lt;a href=&#34;https://pgloader.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pgloader&lt;/a&gt; to automate the migration process. It handles schema conversion, data type mapping, and data loading, making it a powerful tool for this task.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt install pgloader
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pgloader --verbose mysql://user:password@host/database postgresql://user:password@host/database
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;p.s. you can also use pgloader to load data from CSV files, SQLite or MS-SQL Server.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git Cheatsheet</title>
      <link>http://localhost:1313/post/git-cheatsheet/</link>
      <pubDate>Tue, 10 Oct 2023 10:00:00 +0300</pubDate>
      <guid>http://localhost:1313/post/git-cheatsheet/</guid>
      <description>


&lt;details class=&#34;print:hidden xl:hidden&#34; &gt;
  &lt;summary&gt;Table of Contents&lt;/summary&gt;
  &lt;div class=&#34;text-sm&#34;&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#git-configuration&#34;&gt;Git Configuration&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#starting-a-project--init&#34;&gt;Starting a Project / INIT&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#day-to-day-work--stage--snapshot&#34;&gt;Day-to-Day Work / Stage &amp;amp; Snapshot&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#git-stash-commands&#34;&gt;Git Stash Commands&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#git-branching-model--branch--merge--rewrite-history&#34;&gt;Git Branching Model / Branch &amp;amp; Merge / Rewrite History&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#inspect-history--inspect--compare&#34;&gt;Inspect History / Inspect &amp;amp; Compare&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#reverting-changes&#34;&gt;Reverting Changes&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#tagging-commits&#34;&gt;Tagging Commits&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#synchronizing-repositories--share--update&#34;&gt;Synchronizing Repositories / Share &amp;amp; Update&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#git-repository-maintenance&#34;&gt;Git Repository Maintenance&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/div&gt;
&lt;/details&gt;

&lt;p&gt;In today&amp;rsquo;s collaborative development world (as of 2024), version control is crucial for managing code effectively. &lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git&lt;/a&gt;, a distributed version control system (&lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_version_control&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DVCS&lt;/a&gt;), has become the industry standard for developers of all backgrounds.&lt;/p&gt;
&lt;h2 id=&#34;git-configuration&#34;&gt;Git Configuration&lt;/h2&gt;
&lt;p&gt;The initial setup of Git involves configuring your user information and some helpful settings.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git config --global user.name &amp;quot;[Your Name]&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Sets the name associated with your commits and tags. Replace &lt;code&gt;[Your Name]&lt;/code&gt; with your actual first and last name.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git config --global user.email &amp;quot;[your-valid-email@example.com]&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Sets the email address associated with your commits and tags. Replace &lt;code&gt;[your-valid-email@example.com]&lt;/code&gt; with your actual email address.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git config --global color.ui auto&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Enables automatic colorization of Git&amp;rsquo;s command-line output for better readability.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;starting-a-project--init&#34;&gt;Starting a Project / INIT&lt;/h2&gt;
&lt;p&gt;Git provides two primary ways to begin working with a project: creating a new local repository or cloning an existing one.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git init [project name]&lt;/code&gt; (optional)&lt;/td&gt;
          &lt;td&gt;Initializes a new Git repository in the current directory. If you provide a &lt;code&gt;[project name]&lt;/code&gt;, Git will create a new directory with that name and initialize a repository inside it.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git clone &amp;lt;project URL&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Downloads a complete project, including its entire history, from a remote repository specified by the &lt;code&gt;&amp;lt;project URL&amp;gt;&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;day-to-day-work--stage--snapshot&#34;&gt;Day-to-Day Work / Stage &amp;amp; Snapshot&lt;/h2&gt;
&lt;p&gt;Essential Git commands for your daily workflow:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Displays the current state of your working directory, including new, modified, and staged files. It also shows the current branch name, commit identifier, and any changes awaiting commit.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add [file]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Adds a specific file to the staging area, which prepares it for the next commit. Use &lt;code&gt;.&lt;/code&gt; (dot) to add all changed files from the current directory and its subdirectories.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git diff [file]&lt;/code&gt; (optional)&lt;/td&gt;
          &lt;td&gt;Shows the differences between the working directory (your uncommitted changes) and the staging area, allowing you to review modifications before committing.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git diff --staged [file]&lt;/code&gt; (optional)&lt;/td&gt;
          &lt;td&gt;Reveals changes between the staging area (files prepared for commit) and the last committed snapshot, helping you verify staged modifications.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git checkout -- [file]&lt;/code&gt; (&lt;strong&gt;Use with caution!&lt;/strong&gt; )&lt;/td&gt;
          &lt;td&gt;Discards all changes made to a specific file in the working directory. This action cannot be undone!&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git reset [&amp;lt;path&amp;gt;]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Reverts changes in the working directory or staging area to match the specified path or the latest commit (HEAD). Use cautiously, as it can lose unsaved work.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -m &amp;quot;[descriptive message]&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Creates a new commit snapshot, capturing the current state of the staged files. Include a clear and concise message describing the changes made.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git rm [file]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Removes a file from both the working directory and the staging area, effectively deleting it from your project.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;git-stash-commands&#34;&gt;Git Stash Commands&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git stash&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Temporarily saves the current state of your working directory (uncommitted changes and staged files) for later use. This creates a &amp;ldquo;stash&amp;rdquo; entry, essentially a snapshot of your current work.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git stash list&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Lists all your stashed changes in reverse chronological order (most recent stash at the top). This helps you identify and manage specific stashed modifications.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git stash pop&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Applies the changes from the most recent stash (top of the stash list) to your working directory. This effectively &amp;ldquo;un-stashes&amp;rdquo; your work, incorporating the previously saved changes. The stash itself is removed after a successful pop.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git stash drop&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Permanently removes a specific stash entry from the stash list. Use the output from &lt;code&gt;git stash list&lt;/code&gt; to identify the stash you want to delete (e.g., &lt;code&gt;git stash drop stash@{0}&lt;/code&gt; to delete the most recent stash). &lt;strong&gt;Use with caution!&lt;/strong&gt; Once dropped, a stash cannot be recovered.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;git-branching-model--branch--merge--rewrite-history&#34;&gt;Git Branching Model / Branch &amp;amp; Merge / Rewrite History&lt;/h2&gt;
&lt;p&gt;Effective branching strategies are essential for managing code development in Git. Here&amp;rsquo;s a breakdown of key Git commands for branching, merging, and history manipulation:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch [-a]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Lists all local branches in your repository. Use the &lt;code&gt;-a&lt;/code&gt; flag to see both local and remote branches.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch [branch_name]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Creates a new branch named &lt;code&gt;[branch_name]&lt;/code&gt; that starts from the current HEAD commit.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git rebase [branch]&lt;/code&gt; (&lt;strong&gt;Use with caution!&lt;/strong&gt; )&lt;/td&gt;
          &lt;td&gt;Rebases the current branch on top of the specified &lt;code&gt;[branch]&lt;/code&gt;. This replays your commits on top of the &lt;code&gt;[branch]&lt;/code&gt; history, potentially rewriting history and making it difficult for collaboration. &lt;strong&gt;Consider using &lt;code&gt;git merge&lt;/code&gt; for collaborative workflows.&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git checkout [-b] [branch_name]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Switches your working directory to the specified &lt;code&gt;[branch_name]&lt;/code&gt;. Use the &lt;code&gt;-b&lt;/code&gt; flag to create a new branch named &lt;code&gt;[branch_name]&lt;/code&gt; if it doesn&amp;rsquo;t exist yet.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git merge [branch_name]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Merges the changes from the specified &lt;code&gt;[branch_name]&lt;/code&gt; into the current branch, combining their histories. This is generally preferred over &lt;code&gt;git rebase&lt;/code&gt; for collaborative development.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch -d [branch_name]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Deletes the specified &lt;code&gt;[branch_name]&lt;/code&gt;, but only if it has already been merged into another branch. Use the &lt;code&gt;-D&lt;/code&gt; flag (&lt;strong&gt;use with caution!&lt;/strong&gt;) to force deletion even if unmerged, but be aware this can cause issues in collaborative workflows.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Additional Commands:&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Lists all local branches, indicating the currently active branch with an asterisk (&lt;code&gt;*&lt;/code&gt;).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git checkout [branch]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Switches to the specified &lt;code&gt;[branch]&lt;/code&gt; and checks it out into your working directory.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git reset --hard [commit]&lt;/code&gt; (&lt;strong&gt;Use with extreme caution!&lt;/strong&gt; )&lt;/td&gt;
          &lt;td&gt;Discards all uncommitted changes in your working directory and resets it to the state of the specified commit. This action cannot be undone!&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;git branch&lt;/code&gt; regularly to keep track of your branches.&lt;/li&gt;
&lt;li&gt;Favor &lt;code&gt;git merge&lt;/code&gt; over &lt;code&gt;git rebase&lt;/code&gt; in collaborative development to avoid rewriting history and potential conflicts.&lt;/li&gt;
&lt;li&gt;Be cautious with &lt;code&gt;git reset --hard&lt;/code&gt; and &lt;code&gt;git branch -D&lt;/code&gt; as they can lead to data loss.&lt;/li&gt;
&lt;li&gt;Consider using a visual Git client to get a better understanding of branch relationships.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inspect-history--inspect--compare&#34;&gt;Inspect History / Inspect &amp;amp; Compare&lt;/h2&gt;
&lt;p&gt;Understanding your project&amp;rsquo;s history is crucial in Git. Here&amp;rsquo;s a table outlining essential commands for inspecting commits, comparing branches, and viewing Git objects:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git log&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Lists the commit history of your current branch, starting from the most recent commit and working backwards.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git log [-n count]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Shows a limited view of the commit history, displaying only the most recent &lt;code&gt;n&lt;/code&gt; commits.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git log --oneline --graph --decorate&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Provides a concise overview of the commit history with a visual graph, reference labels, and decorations (e.g., author names, commit messages). Each commit is displayed on a single line.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git log ref^..&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Lists commits that exist on your current branch (ref) but haven&amp;rsquo;t been merged into the specified reference (&lt;code&gt;ref&lt;/code&gt;). This reference can be a branch name or a tag name.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git log --first-parent origin/master..HEAD&lt;/code&gt; (&lt;strong&gt;Advanced:&lt;/strong&gt; Use with caution!)&lt;/td&gt;
          &lt;td&gt;Shows commits specific to your current branch (HEAD) that are not present in the &lt;code&gt;origin/master&lt;/code&gt; branch&amp;rsquo;s linear history (excluding merges). This is useful for identifying your local changes on top of the remote &lt;code&gt;master&lt;/code&gt; branch.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git reflog&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Displays a history of operations (like checkouts and commits) performed on your local repository.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git log branchB..branchA&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Reveals the commits that are present on branch &lt;code&gt;branchA&lt;/code&gt; but not on branch &lt;code&gt;branchB&lt;/code&gt;. This helps you understand what changes exist in &lt;code&gt;branchA&lt;/code&gt; that are not yet included in &lt;code&gt;branchB&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git log --follow [file]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Tracks the history of a specific file named &lt;code&gt;[file]&lt;/code&gt;, even if it has been renamed during development. This allows you to see all commits that modified the file throughout its lifetime.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git diff branchB...branchA&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Shows the difference between branches &lt;code&gt;branchB&lt;/code&gt; and &lt;code&gt;branchA&lt;/code&gt;. This essentially reveals what changes are present in &lt;code&gt;branchA&lt;/code&gt; compared to &lt;code&gt;branchB&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git show [SHA]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Displays any Git object (e.g., a commit, a blob, or a tree) in a human-readable format, given its SHA-1 hash (&lt;code&gt;[SHA]&lt;/code&gt;).&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;git log&lt;/code&gt; variations to explore your commit history at different levels of detail.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reflog&lt;/code&gt; can be helpful for tracking your actions in the repository.&lt;/li&gt;
&lt;li&gt;Commands like &lt;code&gt;git log branchB..branchA&lt;/code&gt; and &lt;code&gt;git diff branchB...branchA&lt;/code&gt; are valuable for comparing branches.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git show&lt;/code&gt; allows you to examine specific Git objects by their unique identifier.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reverting-changes&#34;&gt;Reverting Changes&lt;/h2&gt;
&lt;p&gt;Git provides two primary ways to undo changes in your project: &lt;code&gt;git reset&lt;/code&gt; and &lt;code&gt;git revert&lt;/code&gt;. Here&amp;rsquo;s a table explaining these commands:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git reset [--hard] [target reference]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Moves the current branch pointer (HEAD) to the specified &lt;code&gt;target reference&lt;/code&gt; (e.g., a commit SHA or branch name). This essentially undoes changes by rewinding your working directory and staging area to match the target state.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;* &lt;strong&gt;Without &lt;code&gt;--hard&lt;/code&gt;&lt;/strong&gt; (default): Changes made since the target reference become uncommitted changes in your working directory. However, be cautious as these changes can be easily lost.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;* &lt;strong&gt;With &lt;code&gt;--hard&lt;/code&gt; (&lt;strong&gt;Use with extreme caution!&lt;/strong&gt;)&lt;/strong&gt;: Discards all uncommitted changes in your working directory and staging area, completely resetting them to the state of the target reference. &lt;strong&gt;This action cannot be undone!&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git revert [commit SHA]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Creates a new commit that effectively reverses the changes introduced in the specified commit identified by its SHA. This is generally a safer option than &lt;code&gt;git reset&lt;/code&gt; as it creates a new commit to track the reversal, allowing you to revert the revert if needed.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;git reset&lt;/code&gt; cautiously, especially with the &lt;code&gt;--hard&lt;/code&gt; flag, as it can lead to permanent data loss.&lt;/li&gt;
&lt;li&gt;Consider &lt;code&gt;git revert&lt;/code&gt; as a safer alternative for undoing changes as it creates a new commit for tracking.&lt;/li&gt;
&lt;li&gt;Before using either command, it&amp;rsquo;s highly recommended to back up your work or use a stash (covered in a previous section) to preserve uncommitted changes if needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tagging-commits&#34;&gt;Tagging Commits&lt;/h2&gt;
&lt;p&gt;Tags are a powerful way to mark specific points in your Git history for easy reference.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git tag&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Lists all existing tags associated with your Git repository.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git tag [name] [commit SHA]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Creates a new tag named &lt;code&gt;[name]&lt;/code&gt; that points to the current HEAD commit (the latest commit in your current branch). You can optionally specify a specific commit SHA to tag instead of the current one.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git tag -a [name] [commit SHA]&lt;/code&gt; (&lt;strong&gt;Advanced:&lt;/strong&gt; Use with caution!)&lt;/td&gt;
          &lt;td&gt;Creates an annotated tag named &lt;code&gt;[name]&lt;/code&gt; for the specified commit (either the current HEAD or a specific SHA). Annotated tags store additional information like a tag message, which can be helpful for documentation purposes. However, annotated tags can be larger than lightweight tags (created by &lt;code&gt;git tag&lt;/code&gt; without &lt;code&gt;-a&lt;/code&gt;). Consider using lightweight tags for simplicity in most cases.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git tag -d [name]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Removes the specified tag named &lt;code&gt;[name]&lt;/code&gt; from your local repository.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use clear and descriptive names for your tags to enhance readability.&lt;/li&gt;
&lt;li&gt;Lightweight tags (created with &lt;code&gt;git tag&lt;/code&gt;) are generally preferred due to their smaller size.&lt;/li&gt;
&lt;li&gt;Annotated tags (created with &lt;code&gt;git tag -a&lt;/code&gt;) can be useful for storing additional information, but use them judiciously when size is a concern.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;synchronizing-repositories--share--update&#34;&gt;Synchronizing Repositories / Share &amp;amp; Update&lt;/h2&gt;
&lt;p&gt;Collaboration and keeping your project code in sync are essential aspects of Git.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git fetch [remote]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Retrieves changes from the remote repository specified by &lt;code&gt;[remote]&lt;/code&gt; (e.g., &lt;code&gt;origin&lt;/code&gt;) but doesn&amp;rsquo;t automatically integrate them into your local branch. This is useful when you want to see what changes exist on the remote without merging them yet.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git fetch --prune [remote]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Fetches changes from the remote repository and additionally removes any local references (refs) to branches that have been deleted on the remote. This helps keep your local repository clean.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git pull [remote]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Combines &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git merge&lt;/code&gt; in one step. It downloads changes from the remote repository and attempts to merge them into your current branch. This is a convenient way to stay up-to-date with the remote&amp;rsquo;s latest changes.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push [--tags] [remote]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Pushes your local commits to the remote repository specified by &lt;code&gt;[remote]&lt;/code&gt;. Use the &lt;code&gt;--tags&lt;/code&gt; flag to include tags along with your commits.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push -u [remote] [branch]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Pushes your local branch named &lt;code&gt;[branch]&lt;/code&gt; to the remote repository and sets the corresponding remote branch as an &amp;ldquo;upstream&amp;rdquo; branch. This simplifies future pushes as you won&amp;rsquo;t need to specify the remote branch name explicitly.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git remote add [alias] [url]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Adds a new remote repository identified by its URL &lt;code&gt;[url]&lt;/code&gt; and assigns a short alias name &lt;code&gt;[alias]&lt;/code&gt; for easier reference.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git remote update origin --prune&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Update the local list of remote branches.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git fetch [alias]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Fetches changes from the remote repository associated with the specified alias &lt;code&gt;[alias]&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git merge [alias]/[branch]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Merges the remote branch named &lt;code&gt;[branch]&lt;/code&gt; from the remote repository identified by &lt;code&gt;[alias]&lt;/code&gt; into your current local branch. This allows you to incorporate changes from a specific remote branch.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push [alias] [branch]&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Pushes your local branch named &lt;code&gt;[branch]&lt;/code&gt; to the remote branch named &lt;code&gt;[branch]&lt;/code&gt; on the remote repository identified by &lt;code&gt;[alias]&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;git fetch&lt;/code&gt; when you want to be aware of remote changes without merging them immediately.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git pull&lt;/code&gt; is a convenient way to fetch and merge in one step, but be prepared to handle potential merge conflicts.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;git push&lt;/code&gt; to share your local commits with the remote repository.&lt;/li&gt;
&lt;li&gt;Manage remote repositories with aliases for easier handling using &lt;code&gt;git remote add&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Consider using a &lt;a href=&#34;https://git-scm.com/downloads/guis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;visual Git client&lt;/a&gt; to simplify branch management and visualization.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git-repository-maintenance&#34;&gt;Git Repository Maintenance&lt;/h2&gt;
&lt;p&gt;Regular maintenance of your Git repository is essential for optimal performance and organization.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git gc&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Cleans up unnecessary files and optimizes the local repository&amp;rsquo;s database. This command is useful for reducing disk usage and improving Git&amp;rsquo;s performance.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git fsck&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Verifies the integrity of your repository&amp;rsquo;s objects and references, checking for any corruption or inconsistencies. This is helpful for ensuring the reliability of your Git data.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git prune&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Removes unreachable objects (e.g., commits, blobs) from your repository, freeing up disk space and keeping your repository clean.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git reflog expire --expire=now --all&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Expires all reflog entries immediately, removing any outdated or unnecessary references. This helps maintain a clean and efficient repository.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git clean -dnx | sed &#39;s/Would remove //;s/Would skip repository //&#39;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Lists untracked files in your working directory that are not ignored by your &lt;code&gt;.gitignore&lt;/code&gt; file. This command is useful for identifying files that may need to be removed or added to the ignore list.  (remove &lt;code&gt;x&lt;/code&gt; to hide ignored files)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;Link to my presentation/talk about &lt;a href=&#34;http://localhost:1313/talk/git/&#34;&gt;Git &amp;hellip;not just version control &lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MC: a commander like no other</title>
      <link>http://localhost:1313/post/mc/</link>
      <pubDate>Mon, 05 Jun 2023 09:18:07 +0300</pubDate>
      <guid>http://localhost:1313/post/mc/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the world of command-line interfaces, &lt;a href=&#34;https://www.midnight-commander.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GNU Midnight Commander (MC)&lt;/a&gt; stands out as a powerful and versatile file manager that brings efficiency and convenience to text-based terminal emulators (console, xterm etc.). With its dual-pane interface and a range of features, MC simplifies file and directory operations, making it a beloved tool for both beginners and experienced users. As stated on it&amp;rsquo;s &lt;a href=&#34;https://github.com/MidnightCommander/mc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub page&lt;/a&gt;, GNU Midnight Commander was conceived as a free clone of John Socha&amp;rsquo;s Norton Commander™. It also takes the best from more recent software with similar interfaces. Many years ago, we used file-managers like these, as &amp;ldquo;Norton Commander&amp;rdquo; in DOS, or the legendary &lt;a href=&#34;https://web.archive.org/web/20120327225906/http://kazong.privat.t-online.de/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DiskMaster2 in AmigaDOS&lt;/a&gt;, which is still alive in &lt;a href=&#34;https://aminet.net/package/util/dir/DiskMaster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aminet&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&#34;dual-pane-interface-for-seamless-file-management&#34;&gt;Dual-Pane Interface for Seamless File Management&lt;/h2&gt;
&lt;p&gt;One of the key strengths of Midnight Commander is its intuitive dual-pane layout. The two panes allow users to navigate through directories and manipulate files seamlessly. Whether you&amp;rsquo;re copying, moving, or deleting files, the dual-pane view enables quick and effortless operations. Moreover, MC provides a command-line prompt at the bottom, allowing users to execute commands directly without switching to a separate terminal window. This combination of a visual interface and command-line capabilities enhances productivity and workflow efficiency.&lt;/p&gt;
&lt;h2 id=&#34;feature-rich-functionality&#34;&gt;Feature-Rich Functionality&lt;/h2&gt;
&lt;p&gt;In addition to its exceptional file management capabilities, MC offers a wide range of features that further enhance its usefulness. It includes a built-in file viewer, which allows users to examine the contents of various file types without the need for external applications. Additionally, MC features a powerful text editor, enabling users to make quick modifications to files without leaving the application. The integrated FTP client functionality allows seamless transfers of files between local and remote systems, adding another layer of convenience for users who need to work with remote servers.&lt;/p&gt;
&lt;p&gt;You can install MC in different systems or you can compile it from source (it&amp;rsquo;s written in C).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MacOS &lt;code&gt;brew install mc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ubuntu/Debian &lt;code&gt;sudo apt install mc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Archlinux &lt;code&gt;sudo pacman -S mc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;rsquo;s a list of feature copied directly from GitHub:&lt;/p&gt;
&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;
&lt;p&gt;Some features are specific to the POSIX environment MC runs on, some are
familiar to the users of similar software for other operating systems.
The features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Built in Virtual File System: manipulate remote file systems through the FTP and SFTP protocols or over secure shell, browse contents of tar, ar, rpm, zip, cpio, lha and rar archives just like local files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Almost all operations work with the virtual file system, enabling you to do complex tasks, like viewing files in archives on an FTP server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mouse support on most terminal emulators for X Window System as well as on the Linux console.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn Keys: GNU Midnight Commander may be configured at run time to support any kind of input keys for a given terminal, making its operation possible even on most weird terminals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Text and hex editors are available for you to use (hex editor is a part of the viewer).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hotlist allows you to keep a list of common visited locations, including remote sites and directories inside archives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Command completion: By pressing Alt-Tab in any place where a filename or an executable are expected, GNU Midnight Commander will complete the name for you.  If you press Alt-Tab for the second time, you get a list box with all possible completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subshell support: Run your commands by a real shell interpreter.  GNU Midnight Commander interacts with bash, tcsh and zsh to provide you with all of the facilities available in your preferred shell.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find file command can search for the file contents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Background operations allow you to copy or move files from any virtual file system while you do other tasks (i.e., you can do background FTP copies).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FTP proxy is supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux file recovery: If you are using Linux, you can recover deleted files from an ext2 or ext3 partition with the undelete file system.  This is a low level file recovery function that can recover files deleted by any program on Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;External panelization: You can run any arbitrary external command and GNU Midnight Commander will display the output generated as a file listing that can be manipulated as a regular directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Emacs-like key bindings are used in all widgets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Context dependent actions (open, view, edit) are available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The built-in file viewer, together with the context dependent actions is used to format man pages on the fly, coloring mail messages and more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The built-in editor supports syntax highlighting and external actions, such as spell checking and formatting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Scrcpy: Display and control your Android device</title>
      <link>http://localhost:1313/post/scrcpy/</link>
      <pubDate>Fri, 14 Apr 2023 16:10:00 +0300</pubDate>
      <guid>http://localhost:1313/post/scrcpy/</guid>
      <description>&lt;p&gt;&lt;code&gt;scrcpy&lt;/code&gt; is an open-source tool developed by Genymobile, you can visit the &lt;a href=&#34;https://github.com/Genymobile/scrcpy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Official GitHub&lt;/a&gt; and learn more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Word from the author:&lt;/strong&gt;
This application mirrors Android devices (video and audio) connected via USB or over TCP/IP, and allows to control the device with the keyboard and the mouse of the computer. It does not require any root access. It works on Linux, Windows and macOS.&lt;/p&gt;
&lt;p&gt;It focuses on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt;: native, displays only the device screen&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt;: 30~120fps, depending on the device&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt;: 1920×1080 or above&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Genymobile/scrcpy/pull/646&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;35~70ms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt;: ~1 second to display the first image&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt;: nothing is left installed on the Android device&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;user benefits&lt;/strong&gt;: no account, no ads, no internet required&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;freedom&lt;/strong&gt;: free and open source software&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Its features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/audio.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;audio forwarding&lt;/a&gt; (Android &amp;gt;= 11)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/recording.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;recording&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mirroring with &lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/device.md#turn-screen-off&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Android device screen off&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/control.md#copy-paste&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;copy-paste&lt;/a&gt; in both directions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/video.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;configurable quality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android device screen &lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/v4l2.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;as a webcam (V4L2)&lt;/a&gt; (Linux-only)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/hid-otg.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;physical keyboard/mouse simulation (HID)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/hid-otg.md#otg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OTG mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;and more…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Running scrcpy&#34; srcset=&#34;
               /post/scrcpy/image1_hu_d66b0ffd360aba34.webp 400w,
               /post/scrcpy/image1_hu_76e6ef16731cf17a.webp 760w,
               /post/scrcpy/image1_hu_84bcb1e9a840e002.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/scrcpy/image1_hu_d66b0ffd360aba34.webp&#34;
               width=&#34;760&#34;
               height=&#34;205&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;This tool gets better as it ages, like good &lt;code&gt;wine&lt;/code&gt;, please &lt;a href=&#34;https://github.com/Genymobile/scrcpy/graphs/contributors&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;keep up the good work guys&lt;/a&gt; 💯&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Package Managers - not the evil kind of PMs</title>
      <link>http://localhost:1313/post/pkgman/</link>
      <pubDate>Tue, 21 Mar 2023 21:27:00 +0300</pubDate>
      <guid>http://localhost:1313/post/pkgman/</guid>
      <description>


&lt;details class=&#34;print:hidden xl:hidden&#34; &gt;
  &lt;summary&gt;Table of Contents&lt;/summary&gt;
  &lt;div class=&#34;text-sm&#34;&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#scoop&#34;&gt;Scoop&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#homebrew&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#bonus-drum&#34;&gt;Bonus &amp;#x1f941;&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/div&gt;
&lt;/details&gt;

&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;If you come from planet Linux you&amp;rsquo;ve used a package manager before, &lt;code&gt;pacman&lt;/code&gt; on Archlinux, &lt;code&gt;apt&lt;/code&gt; on Debian/Ubuntu, each distro has it&amp;rsquo;s own beast, you already know how powerful and productive they are, now the time has come to use them on your &lt;em&gt;other&lt;/em&gt; workstation &amp;#x1f604;&lt;/p&gt;
&lt;p&gt;&amp;#x1f37b; But first, an ode to them!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the land of coding, where software abounds,&lt;br&gt;
Where apps and updates are always around,&lt;br&gt;
A hero emerged, to manage it all,&lt;br&gt;
A package manager, standing tall!&lt;/p&gt;
&lt;p&gt;With Scoop for Windows, and Homebrew for Mac,&lt;br&gt;
These package managers kept software on track,&lt;br&gt;
Installations were simple, updates were too,&lt;br&gt;
Making life easier for me and for you.&lt;/p&gt;
&lt;p&gt;So hail to the package managers, we say,&lt;br&gt;
For keeping our software up-to-date each day,&lt;br&gt;
We honor your efforts, your skill, your might,&lt;br&gt;
And thank you for making our coding lives bright!&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/chat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;&amp;hellip;generated by ChatGPT&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Package managers are essential tools that make it easy for developers and users to install, update, and manage software applications on their computers, not only command line tools buthuge apps like browsers and IDEs. Two of the most popular package managers are &lt;a href=&#34;https://scoop.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoop&lt;/a&gt; for Windows and &lt;a href=&#34;https://brew.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Homebrew&lt;/a&gt; for macOS.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;scoop&#34;&gt;Scoop&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Scoop&#34; srcset=&#34;
               /post/pkgman/scoop_hu_cb4361b63396390.webp 400w,
               /post/pkgman/scoop_hu_f12f9cb7fab7e1b7.webp 760w,
               /post/pkgman/scoop_hu_5b98ad82382843dd.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/pkgman/scoop_hu_cb4361b63396390.webp&#34;
               width=&#34;760&#34;
               height=&#34;315&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

Scoop is a command-line installer for Windows that allows users to easily install and manage software packages from the command line. As mentioned in the &lt;a href=&#34;https://github.com/ScoopInstaller/Scoop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub official page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What does Scoop do?&lt;/p&gt;
&lt;p&gt;Scoop installs programs from the command line with a minimal amount of friction. It:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eliminates permission popup windows&lt;/li&gt;
&lt;li&gt;Hides GUI wizard-style installers&lt;/li&gt;
&lt;li&gt;Prevents PATH pollution from installing lots of programs&lt;/li&gt;
&lt;li&gt;Avoids unexpected side-effects from installing and uninstalling programs&lt;/li&gt;
&lt;li&gt;Finds and installs dependencies automatically&lt;/li&gt;
&lt;li&gt;Performs all the extra setup steps itself to get a working program&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like, e.g.:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop install sudo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo scoop install 7zip git openssh --global
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop install aria2 curl grep sed less touch
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop install python ruby go perl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s from the official page, but, having installed some packages the first time &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; what I usually do each time I log in Windows is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop update *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop cleanup *
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;homebrew&#34;&gt;Homebrew&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Homebrew&#34; srcset=&#34;
               /post/pkgman/homebrew_hu_5d74178367052408.webp 400w,
               /post/pkgman/homebrew_hu_d6b544c03d7e8511.webp 760w,
               /post/pkgman/homebrew_hu_526f24278b27f896.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/pkgman/homebrew_hu_5d74178367052408.webp&#34;
               width=&#34;760&#34;
               height=&#34;611&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

Homebrew is a command-line package manager for macOS (or Linux &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;) that allows installing software from the terminal. Brew provides a centralized repository of software packages that can be easily updated and installed. Again, from the &lt;a href=&#34;https://github.com/Homebrew/brew&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official GitHub homepage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Features, usage and installation instructions are &lt;a href=&#34;https://brew.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;summarised on the homepage&lt;/a&gt;. Terminology (e.g. the difference between a Cellar, Tap, Cask and so forth) is &lt;a href=&#34;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;explained here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What Packages Are Available?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;type &lt;code&gt;brew formulae&lt;/code&gt; for a list.&lt;/li&gt;
&lt;li&gt;or visit &lt;a href=&#34;https://formulae.brew.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;formulae.brew.sh&lt;/a&gt; to browse packages online.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Documentation&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew help&lt;/code&gt;, &lt;code&gt;man brew&lt;/code&gt; or check &lt;a href=&#34;https://docs.brew.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;our documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bonus-drum&#34;&gt;Bonus &amp;#x1f941;&lt;/h2&gt;
&lt;p&gt;If you come from Windows there&amp;rsquo;s a free (not open-source) tool called &lt;a href=&#34;https://patchmypc.com/home-updater&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Patch My PC Home Updater&lt;/a&gt; that installs a large list of apps with an easy user interface, what&amp;rsquo;s cool about it? &lt;br&gt;
That the apps are already hand-picked and that they are fully categorized! You can find very useful freeware tools there &amp;#x1f609;
















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Patch My PC&#34; srcset=&#34;
               /post/pkgman/pmpc_hu_394a150b25053eda.webp 400w,
               /post/pkgman/pmpc_hu_595a3e1335288e58.webp 760w,
               /post/pkgman/pmpc_hu_13d9013f87b9b2dd.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/pkgman/pmpc_hu_394a150b25053eda.webp&#34;
               width=&#34;760&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Both package managers are awesome, try them and remember, I told you so&amp;#x2122;&amp;#xfe0f;&lt;br&gt;
It would be great if you can support the authors in a way, too.\&lt;/p&gt;
&lt;p&gt;In case you want to try more package managers there are &lt;a href=&#34;https://www.finkproject.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fink&lt;/a&gt; and &lt;a href=&#34;https://www.macports.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MacPorts&lt;/a&gt; for macOS and &lt;a href=&#34;https://chocolatey.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chokolatey&lt;/a&gt; for Windows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: I found out that there&amp;rsquo;s an official Windows tool : &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/package-manager/winget/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;winget&lt;/a&gt;&lt;br&gt;
Very convenient since it scans all your (already) installed apps !&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;code&gt;scoop install git gh 7zip nano nodejs-lts hugo&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;I dont recommend this, leave your Linux package manager alone &amp;#x1f603;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Buku: a powerful bookmark manager</title>
      <link>http://localhost:1313/post/buku/</link>
      <pubDate>Sat, 18 Mar 2023 20:00:00 +0300</pubDate>
      <guid>http://localhost:1313/post/buku/</guid>
      <description>&lt;p&gt;Are you tired of losing track of your bookmarks across multiple browsers? Look no further than Buku, the powerful bookmark manager that imports bookmarks from all your browsers, works on console and has a web-based server.&lt;/p&gt;
&lt;p&gt;With Buku, you can easily organize your bookmarks into categories and tags, making it easy to find exactly what you need. Plus, Buku&amp;rsquo;s powerful search feature allows you to quickly locate any bookmark in your collection.&lt;/p&gt;
&lt;p&gt;One of the most unique features of Buku is its powerful console interface:&lt;/p&gt;
&lt;script async id=&#34;asciicast-137065&#34; src=&#34;https://asciinema.org/a/137065.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;This allows power users to manage their bookmarks from the command line, making it incredibly fast and efficient to use. But don&amp;rsquo;t worry if you&amp;rsquo;re not a command line aficionado, Buku also has a user-friendly web-based interface that&amp;rsquo;s perfect for beginners and not only has beautiful stats page but a powerful API that you can use to make your own applications!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bukuserver run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;screenshot&#34; srcset=&#34;
               /post/buku/screenshot-buku_hu_b8a88486f79ca78d.webp 400w,
               /post/buku/screenshot-buku_hu_3fe16ee851a5e5d0.webp 760w,
               /post/buku/screenshot-buku_hu_bef1171e20f4b4ec.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/buku/screenshot-buku_hu_b8a88486f79ca78d.webp&#34;
               width=&#34;760&#34;
               height=&#34;515&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Another great aspect of Buku is its cross-platform support. Whether you&amp;rsquo;re using Windows, Mac, or Linux, Buku will work seamlessly with your favorite browser.&lt;/p&gt;
&lt;p&gt;Buku is open source, written in Python and available from &lt;a href=&#34;https://github.com/jarun/buku&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to bypass Git Hooks</title>
      <link>http://localhost:1313/post/git-bypass/</link>
      <pubDate>Wed, 08 Mar 2023 12:42:52 +0200</pubDate>
      <guid>http://localhost:1313/post/git-bypass/</guid>
      <description>&lt;p&gt;&lt;code&gt;git push --no-verify&lt;/code&gt; is a command used to push your local changes to a remote repository without running pre-commit hooks or pre-push hooks. Pre-commit hooks and pre-push hooks are scripts that run before a commit or a push, and they are used to perform automated tests, code quality checks, or other actions that help ensure the quality and correctness of your code. You can use &lt;a href=&#34;https://github.com/typicode/husky&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;husky&lt;/a&gt; or &lt;a href=&#34;https://pre-commit.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pre-commit&lt;/a&gt; if you need extra features or just production ready tools.&lt;/p&gt;
&lt;p&gt;Sometimes, you may need to bypass these hooks and push your changes without running them. For example, if you&amp;rsquo;re in a hurry and you need to push a critical bug fix, or if you&amp;rsquo;re working in a team with strict code review policies and you need to push a work-in-progress commit for collaboration purposes.&lt;/p&gt;
&lt;p&gt;To use it simply add the &lt;code&gt;--no-verify&lt;/code&gt; flag to your git push command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push --no-verify
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will push your changes to the remote repository without running the pre-commit or pre-push hooks.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s important to note that using &amp;ndash;no-verify should be done with caution, as it can potentially lead to lower code quality and a higher risk of introducing bugs or other issues into your codebase. Therefore, it&amp;rsquo;s recommended to only use &amp;ndash;no-verify when it&amp;rsquo;s absolutely necessary and always double-check your code before pushing it to a remote repository.&lt;/p&gt;
&lt;p&gt;You can check the &lt;a href=&#34;https://git-scm.com/docs/git-push#Documentation/git-push.txt---no-verify&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official Git Documentation.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want a refresher on general Git practices you can check &lt;a href=&#34;http://localhost:1313/slides/git/&#34;&gt;my presentation.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Breaking the Barrier</title>
      <link>http://localhost:1313/post/barrier/</link>
      <pubDate>Fri, 20 Jan 2023 19:00:00 +0300</pubDate>
      <guid>http://localhost:1313/post/barrier/</guid>
      <description>&lt;p&gt;Barrier is an open-source KVM (Keyboard, Video, Mouse) software that allows users to share their keyboard and mouse across multiple computers. This allows users to move their cursor and type on one computer while the keyboard and mouse inputs are sent to another computer.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/debauchee/barrier/master/res/barrier.png&#34; alt=&#34;logo&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Barrier also supports the use of multiple monitors, allowing users to move their cursor seamlessly between different screens.The software is designed to be simple, easy to use, and highly configurable. Barrier is available for many operating systems and can be downloaded from &lt;a href=&#34;https://github.com/debauchee/barrier&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A little bit of history:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Barrier was created as a fork of Synergy due to certain limitations and issues that the developer of Barrier, Debauchee, experienced while using Synergy. Due to these limitations and issues, Debauchee decided to create a fork of Synergy, called Barrier, with the goal of addressing these issues and providing a more stable, customizable, and actively developed alternative to Synergy. Some of the features that Barrier added that Synergy didn&amp;rsquo;t have at the time like multi-monitor support, encryption, and improved cursor handling. Since then, Barrier has continued to be developed and maintained, with new features and improvements being added on a regular basis. It is also actively supported by its developer community, which aims to provide a stable, customizable and actively developed KVM solution for those who need it.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I was an early user and even an Early Adopter of Synergy but was disappointed by the changes and bugs in version 3, then I switched to Barrier and never looked back.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.raspberrypi.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official Raspberry Pi&lt;/a&gt; website praised Barrier with &lt;a href=&#34;https://www.raspberrypi.com/news/share-your-keyboard-and-mouse-between-computers-with-barrier/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a nice article and a video guide&lt;/a&gt;.&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/-G9IIauHOhA?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;p&gt;The configuration is easy and straightforward. You can find the instructions on how to install and configure Barrier on the &lt;a href=&#34;https://github.com/debauchee/barrier#readme&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub page&lt;/a&gt; or watch the video.&lt;/p&gt;
&lt;p&gt;Tip: You can use &lt;code&gt;Scroll Lock&lt;/code&gt; to lock on a computer and don&amp;rsquo;t switch by accident to another, e.g. when playing a game.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Free your notes with Joplin</title>
      <link>http://localhost:1313/post/joplin/</link>
      <pubDate>Tue, 20 Dec 2022 20:00:00 +0300</pubDate>
      <guid>http://localhost:1313/post/joplin/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://joplinapp.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Joplin&lt;/a&gt; is an open-source note taking app that allows users to easily organize and store notes, to-do lists, and other information. It can be used on a variety of devices, including desktops, laptops, and mobile devices.&lt;/p&gt;
&lt;p&gt;One of the main features of Joplin is its ability to synchronize notes across multiple devices. Joplin also supports the use of multiple storage options, including the local file system, Dropbox, OneDrive, and WebDAV and more. In my case I use the local file system and synchronize the notes with my Synology NAS via &amp;ldquo;Cloud Station Drive&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The notes are in &lt;a href=&#34;https://www.markdownguide.org/tools/joplin/#joplin-markdown-support&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown format&lt;/a&gt;. Joplin is available as a &lt;strong&gt;💻 desktop&lt;/strong&gt;, &lt;strong&gt;📱 mobile&lt;/strong&gt; and &lt;strong&gt;🔡 terminal&lt;/strong&gt; application.&lt;/p&gt;
&lt;p&gt;Joplin also has a built-in to-do list feature that allows users to easily create and track tasks. This feature is integrated with the note-taking functionality, making it easy to keep track of tasks related to specific notes.&lt;/p&gt;
&lt;p&gt;Another great feature of Joplin is its support for encryption, which allows users to secure their notes and keep them private.&lt;/p&gt;
&lt;p&gt;Full text search is available on all platforms to quickly find the information you need.&lt;/p&gt;
&lt;p&gt;Check the big list of features &lt;a href=&#34;https://joplinapp.org/#features&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>http://localhost:1313/slides/git/</link>
      <pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/slides/git/</guid>
      <description>&lt;section&gt;
&lt;h1 id=&#34;git&#34;&gt;Git&lt;/h1&gt;
&lt;h2 id=&#34;not-just-version-control&#34;&gt;not just version control&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;git&#34;
           src=&#34;http://localhost:1313/slides/git/org.gnome.gitg.svg&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;v2.1 by &lt;a href=&#34;https://georgelitos.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Litos&lt;/a&gt; 12/2022&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;a-bit-of-history&#34;&gt;a bit of history&lt;/h2&gt;
&lt;p&gt;Git was originally authored by &lt;a href=&#34;https://en.wikipedia.org/wiki/Linus_Torvalds&#34; title=&#34;Linus Torvalds&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linus Torvalds&lt;/a&gt; in 2005 for development of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux_kernel&#34; title=&#34;Linux kernel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux kernel&lt;/a&gt;, with other kernel developers contributing to its initial development.
Since 2005, Junio Hamano has been the core maintainer.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;menu-title&#34; style=&#34;display: none&#34;&gt;a bit of history cont&amp;rsquo;d&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As with most other &lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_version_control&#34; title=&#34;Distributed version control&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;distributed version control&lt;/a&gt; systems, and unlike most client–server systems, every Git &lt;a href=&#34;https://en.wikipedia.org/wiki/Directory_%28computing%29&#34; title=&#34;Directory (computing)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;directory&lt;/a&gt; on every &lt;a href=&#34;https://en.wikipedia.org/wiki/Node_%28networking%29&#34; title=&#34;Node (networking)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;computer&lt;/a&gt; is a full-fledged &lt;a href=&#34;https://en.wikipedia.org/wiki/Repository_%28version_control%29&#34; title=&#34;Repository (version control)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt; with complete history and full version-tracking abilities, independent of network access or a central server.&lt;/p&gt;
&lt;p&gt;Git is &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_and_open-source_software&#34; title=&#34;Free and open-source software&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;free and open-source software&lt;/a&gt; distributed under the &lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_General_Public_License&#34; title=&#34;GNU General Public License&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GPL-2.0-only&lt;/a&gt; license.&lt;/p&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tech-talk&#34;&gt;Tech Talk&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=4XpnKHJAok8&amp;amp;t=90s&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linus Torvalds on git&lt;/a&gt;
&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/slides/git/linus.png&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;menu-title&#34; style=&#34;display: none&#34;&gt;Git is alive&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;december-12-2022&#34;&gt;December 12, 2022&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.blog/2022-12-12-highlights-from-git-2-39/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git is alive and actively developed&lt;/a&gt;
&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/slides/git/git239.webp&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Official site&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;menu-title&#34; style=&#34;display: none&#34;&gt;SO Survey 2021&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;stack-overflow-developer-survey-2021&#34;&gt;Stack Overflow Developer Survey 2021&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://insights.stackoverflow.com/survey/2021#most-popular-technologies-tools-tech&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Over 90% of respondents use Git, suggesting that it is a fundamental tool to being a developer.&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/slides/git/so2021.png&#34;&gt;
&lt;/figure&gt;

&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;menu-title&#34; style=&#34;display: none&#34;&gt;SO Survey 2022&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;stack-overflow-developer-survey-2022&#34;&gt;Stack Overflow Developer Survey 2022&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://survey.stackoverflow.co/2022/#section-version-control-version-control-systems&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;No other technology is as widely used as Git. Especially among Professional Developers.&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/slides/git/so2022.png&#34;&gt;
&lt;/figure&gt;

&lt;p&gt;Q: What are the primary version control systems you use?&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;glossary&#34;&gt;Glossary&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Working directory - repo&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;the working directory is the folder on your system that you want to track. Where you develop your project. Everything git related is inside the &lt;code&gt;.git&lt;/code&gt; folder. Serverless.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Remote repository&lt;/td&gt;
          &lt;td&gt;Remote repositories are versions of your project that are hosted elsewhere. You can have several of them, each one is either RO or RW for you.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Git files&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Inside the working directory and beneath, you might find some git related files&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;.gitattributes&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;how to handle files&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;.gitignore&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;what to ignore&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;.gitkeep&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;keep an empty dir&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Tracked files&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Tracked files are the files in the working directory (repository) that Git manages.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;em&gt;The Staging Area&lt;/em&gt;*&lt;/dt&gt;
&lt;dd&gt;The intermediary between the working directory and the project history.&lt;/dd&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Commit&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Commit is the process of adding any changes in tracked files. Git will keep track of all the changes in the &lt;strong&gt;Committed History&lt;/strong&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;em&gt;Commit message&lt;/em&gt;*&lt;/dt&gt;
&lt;dd&gt;The commit message is a summary and description of a commit action.&lt;/dd&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Branches&lt;/strong&gt; (develop, feature, master)&lt;/dt&gt;
&lt;dd&gt;A branch is a set of the repo tracked files. Git allows you to compare and merge branches. It can also be used to organize collaboration inside the repo, fix specific bugs, or create new features.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;em&gt;Merge&lt;/em&gt;*&lt;/dt&gt;
&lt;dd&gt;Copy code changes from one branch to another.&lt;/dd&gt;
&lt;/dl&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;(not really git)&lt;/em&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Fork&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;You clone a public repo, make changes and contribute back with a PR.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;em&gt;Pull/Merge request (PR)&lt;/em&gt;*&lt;/dt&gt;
&lt;dd&gt;A PR is a request to the repository owner to merge your changes back into the original code base.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;git-init&#34;&gt;git init&lt;/h1&gt;
&lt;p&gt;Install &lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git&lt;/a&gt;, then&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global user.name &lt;span class=&#34;s2&#34;&gt;&amp;#34;John Smith&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global user.email john@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global init.defaultBranch main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create a new folder for your project and add a file under version control&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir -p ~/projects/git-test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/projects/git-test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nano new_file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;Commit the changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Initial commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[master (root-commit) 19632d1] Add new file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; 1 file changed, 1 insertion(+)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; create mode 100644 new-file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;every commit is unique, it contains:&lt;/p&gt;
&lt;p&gt;snapshot of the project (a tree with a compressed blob for each file),
ser information,ate,
ommit message,HA-1 checksum.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;commit 81752cd6a514fd2595c40f27c783d6887f84e6e6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Author: John Smith &amp;lt;john@example.com&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Date:   Thu Apr 7 15:17:45 2022 +0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    Initial commit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;dont-fear-the-git&#34;&gt;don&amp;rsquo;t fear the git!&lt;/h1&gt;
&lt;h2 id=&#34;git-will-help-&#34;&gt;Git will help 🥷&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cleanup your code base&lt;/li&gt;
&lt;li&gt;Backup your code&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Merge Requests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code Review&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CI/CD 🤖 (coming soon&amp;hellip;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code linting / beautify&lt;/li&gt;
&lt;li&gt;Automated Testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contribute to open source&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be famous 💰&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;workflow&#34;&gt;workflow&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gitflow Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://numpy.org/doc/stable/dev/development_workflow.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NumPy Development workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Link to JIRA issue&lt;/li&gt;
&lt;li&gt;Merge requests to the main branch&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;a-successful-git-branching-model&#34;&gt;A successful Git branching model&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://nvie.com/posts/a-successful-git-branching-model/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;By Vincent Driessen&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/slides/git/git-model.png&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt;
&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;gitflow-workflow&#34;&gt;Gitflow Workflow&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Atlassian Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/slides/git/branches.svg&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt;
&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;1-start-a-project&#34;&gt;1. Start a project&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Divide work in repositories&lt;/li&gt;
&lt;li&gt;Choose workflow (advanced git flow)&lt;/li&gt;
&lt;li&gt;Select which files to keep under version control&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-work-on-a-project&#34;&gt;2. Work on a project&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Working on a topic/feature/bugfix branch&lt;/li&gt;
&lt;li&gt;Splitting changes into logically separate steps&lt;/li&gt;
&lt;li&gt;Write a good commit message (e.g. present tense, short and meaningfull)&lt;/li&gt;
&lt;li&gt;Preparing changes for submission&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-integrate&#34;&gt;3. Integrate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Submitting and describing changes&lt;/li&gt;
&lt;li&gt;Merge request to the main branch&lt;/li&gt;
&lt;li&gt;Delete working branch&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;team-goal-&#34;&gt;TEAM GOAL 🥅&lt;/h1&gt;
&lt;h2 id=&#34;pull-the-servers-plug&#34;&gt;pull the servers&amp;rsquo; plug&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebuild and restart services anytime&lt;/li&gt;
&lt;li&gt;Do a server &lt;code&gt;reboot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;🔥 Change servers and redeploy&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;rebuild-&#34;&gt;Rebuild 🏠&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;install docker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone repo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat README.md
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;gt; follow the instructions
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker&lt;/a&gt; for dev &amp;amp; production&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Markdown&lt;/a&gt; for writing&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;in case of fire&#34;
           src=&#34;http://localhost:1313/slides/git/in_case_of_fire.svg&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;practice-and-use-everywhere&#34;&gt;practice and use everywhere&lt;/h1&gt;
&lt;p&gt;&amp;hellip;.you don&amp;rsquo;t need a server&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -a -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;Commit message&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout -b new_branch
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;When you don&amp;rsquo;t know what to do type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;On branch main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Your branch is up to date with &amp;#39;origin/main&amp;#39;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Changes not staged for commit:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  (use &amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34; to update what will be committed)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  (use &amp;#34;git restore &amp;lt;file&amp;gt;...&amp;#34; to discard changes in working directory)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	modified:   docker-compose.yml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Untracked files:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  (use &amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34; to include in what will be committed)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	.idea/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	db_sink/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	file_records/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	record_transformer/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;no changes added to commit (use &amp;#34;git add&amp;#34; and/or &amp;#34;git commit -a&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;git-tips&#34;&gt;Git tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Learn the command line basics&lt;/li&gt;
&lt;li&gt;&amp;hellip;and then use a GUI&lt;/li&gt;
&lt;li&gt;you don&amp;rsquo;t have to use only 1 (git) client&lt;/li&gt;
&lt;li&gt;git reset &amp;ndash;hard&lt;/li&gt;
&lt;li&gt;Use aliases (cmdline)&lt;/li&gt;
&lt;li&gt;Use the log/graph 😛&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t panic, recovery is (almost) always possible&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;resolve-merge-conflicts-with-gui&#34;&gt;Resolve merge conflicts with GUI&lt;/h2&gt;
&lt;p&gt;(e.g. Jetbrains PhpStorm)&lt;/p&gt;
&lt;img src=&#34;resolveConflict.png&#34; /&gt;
&lt;hr&gt;
&lt;h2 id=&#34;om-my-zsh-aliases&#34;&gt;om-my-zsh aliases&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;g=git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ga=&amp;#39;git add&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gl=&amp;#39;git pull&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gp=&amp;#39;git push&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcam=&amp;#39;git commit -a -m&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcd=&amp;#39;git checkout $(git_develop_branch)&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gdcw=&amp;#39;git diff --cached --word-diff&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gfa=&amp;#39;git fetch --all --prune --jobs=10&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ggpush=&amp;#39;git push origin &amp;#34;$(git_current_branch)&amp;#34;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gloga=&amp;#39;git log --oneline --decorate --graph --all&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grup=&amp;#39;git remote update&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsps=&amp;#39;git show --pretty=short --show-signature&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gst=&amp;#39;git status&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gstl=&amp;#39;git stash list&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gswd=&amp;#39;git switch $(git_develop_branch)&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;github-tips&#34;&gt;Github tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Check GitHub tools (desktop and cmdline clients)&lt;/li&gt;
&lt;li&gt;Search GitHub with powerfull filters (stars/topic/users/language)&lt;/li&gt;
&lt;li&gt;Check &lt;a href=&#34;https://github.com/explore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github Explore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check project Issues&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;advanced-git&#34;&gt;Advanced git&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Cherry-pick&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;git cherry-pick&lt;/code&gt; lets you select a commit from a branch to apply it to another branch.&lt;/dd&gt;
&lt;dt&gt;Using tags&lt;/dt&gt;
&lt;dd&gt;Git has the option to tag a commit in the repository so that you find it easier or mark an app version on a commit.&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git tag 1.0.0 -m &amp;#39;Release 1.0.0&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;Stashing your changes&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;git stash&lt;/code&gt; allows you to save the current state of the local repository and restore it later.&lt;/dd&gt;
&lt;dt&gt;Creating a patch&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;git format-patch&lt;/code&gt; command is useful to transfer a commit
to another repository&lt;/dd&gt;
&lt;/dl&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;best-practices&#34;&gt;Best practices&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Commit (local) often&lt;/li&gt;
&lt;li&gt;Push daily (at least EOD) 🕠&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/how-to-write-better-git-commit-messages/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Write better commit messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;and-worst&#34;&gt;&amp;hellip;and worst&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t commit half-done work&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t change the published history&lt;/li&gt;
&lt;li&gt;Never rebase a branch that has been pushed to a public repository&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;semantic-commit-messages&#34;&gt;Semantic Commit Messages&lt;/h2&gt;
&lt;p&gt;See how a minor change to your commit message style can make you a better programmer.&lt;/p&gt;
&lt;p&gt;Format: &lt;code&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;scope&amp;gt;&lt;/code&gt; is optional&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;feat: add hat wobble
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;^--^  ^------------^
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|     |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|     +-&amp;gt; Summary in present tense.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------&amp;gt; Type: chore, docs, feat, fix, refactor, style, or test.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;more-examples&#34;&gt;More Examples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feat&lt;/code&gt;: (new feature for the user, not a new feature for build script)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix&lt;/code&gt;: (bug fix for the user, not a fix to a build script)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs&lt;/code&gt;: (changes to the documentation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style&lt;/code&gt;: (formatting, missing semi colons, etc; no production code change)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refactor&lt;/code&gt;: (refactoring production code, eg. renaming a variable)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt;: (adding missing tests, refactoring tests; no production code change)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chore&lt;/code&gt;: (updating grunt tasks etc; no production code change)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.conventionalcommits.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.conventionalcommits.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://seesparkbox.com/foundry/semantic_commit_messages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://seesparkbox.com/foundry/semantic_commit_messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://karma-runner.github.io/1.0/dev/git-commit-msg.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://karma-runner.github.io/1.0/dev/git-commit-msg.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;books&#34;&gt;Books&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pro Git&lt;/a&gt; by Scott Chacon and Ben Straub
&lt;figure&gt;&lt;img src=&#34;https://git-scm.com/images/progit2.png&#34; width=&#34;200&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://www.syncfusion.com/succinctly-free-ebooks/git/overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Succinctly&lt;/a&gt; by Ryan Hodson
&lt;figure&gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/downloads/ebook/ebook-cover/Git-Succinctly.jpg&#34; width=&#34;200&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;cheat-sheets&#34;&gt;Cheat Sheets&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://education.github.com/git-cheat-sheet-education.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Education&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.git-tower.com/blog/git-cheat-sheet/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Tower Git cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cheat.sh/git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cheat.sh/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;tutorials&#34;&gt;Tutorials&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rogerdudler.github.io/git-guide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git - the simple guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/get-started/quickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marklodato.github.io/visual-git-guide/index-en.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A Visual Git Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;man git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; &amp;lt;command&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/section&gt;
&lt;hr&gt;
&lt;h1 id=&#34;advanced-topics&#34;&gt;Advanced topics&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/addressing-merge-conflicts/resolving-a-merge-conflict-using-the-command-line&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resolving a merge conflict using the command line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cbea.ms/git-commit/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Write a Git Commit Message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/merging-vs-rebasing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Merging vs. Rebasing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Distributed-Git-Maintaining-a-Project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Distributed Git - Maintaining a Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://coderwall.com/p/0c-ayq/howto-split-a-git-repository-into-two&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Howto split a git repository into two&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://matthew-brett.github.io/curious-git/curious_git.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curious git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/git-hooks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-lfs.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Large File Storage (LFS)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
