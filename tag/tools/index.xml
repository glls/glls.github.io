<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools | George Litos</title>
    <link>http://localhost:1313/tag/tools/</link>
      <atom:link href="http://localhost:1313/tag/tools/index.xml" rel="self" type="application/rss+xml" />
    <description>Tools</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Mon, 05 Jun 2023 09:18:07 +0300</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hudd78b5bc2e9f708bbbb3651dc62e55b2_16066_512x512_fill_lanczos_center_3.png</url>
      <title>Tools</title>
      <link>http://localhost:1313/tag/tools/</link>
    </image>
    
    <item>
      <title>MC: a commander like no other</title>
      <link>http://localhost:1313/post/mc/</link>
      <pubDate>Mon, 05 Jun 2023 09:18:07 +0300</pubDate>
      <guid>http://localhost:1313/post/mc/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the world of command-line interfaces, &lt;a href=&#34;https://www.midnight-commander.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GNU Midnight Commander (MC)&lt;/a&gt; stands out as a powerful and versatile file manager that brings efficiency and convenience to text-based terminal emulators (console, xterm etc.). With its dual-pane interface and a range of features, MC simplifies file and directory operations, making it a beloved tool for both beginners and experienced users. As stated on it&amp;rsquo;s &lt;a href=&#34;https://github.com/MidnightCommander/mc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub page&lt;/a&gt;, GNU Midnight Commander was conceived as a free clone of John Socha&amp;rsquo;s Norton Commander™. It also takes the best from more recent software with similar interfaces. Many years ago, we used file-managers like these, as &amp;ldquo;Norton Commander&amp;rdquo; in DOS, or the legendary &lt;a href=&#34;https://web.archive.org/web/20120327225906/http://kazong.privat.t-online.de/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DiskMaster2 in AmigaDOS&lt;/a&gt;, which is still alive in &lt;a href=&#34;https://aminet.net/package/util/dir/DiskMaster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aminet&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&#34;dual-pane-interface-for-seamless-file-management&#34;&gt;Dual-Pane Interface for Seamless File Management&lt;/h2&gt;
&lt;p&gt;One of the key strengths of Midnight Commander is its intuitive dual-pane layout. The two panes allow users to navigate through directories and manipulate files seamlessly. Whether you&amp;rsquo;re copying, moving, or deleting files, the dual-pane view enables quick and effortless operations. Moreover, MC provides a command-line prompt at the bottom, allowing users to execute commands directly without switching to a separate terminal window. This combination of a visual interface and command-line capabilities enhances productivity and workflow efficiency.&lt;/p&gt;
&lt;h2 id=&#34;feature-rich-functionality&#34;&gt;Feature-Rich Functionality&lt;/h2&gt;
&lt;p&gt;In addition to its exceptional file management capabilities, MC offers a wide range of features that further enhance its usefulness. It includes a built-in file viewer, which allows users to examine the contents of various file types without the need for external applications. Additionally, MC features a powerful text editor, enabling users to make quick modifications to files without leaving the application. The integrated FTP client functionality allows seamless transfers of files between local and remote systems, adding another layer of convenience for users who need to work with remote servers.&lt;/p&gt;
&lt;p&gt;You can install MC in different systems or you can compile it from source (it&amp;rsquo;s written in C).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MacOS &lt;code&gt;brew install mc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ubuntu/Debian &lt;code&gt;sudo apt install mc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Archlinux &lt;code&gt;sudo pacman -S mc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;rsquo;s a list of feature copied directly from GitHub:&lt;/p&gt;
&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;
&lt;p&gt;Some features are specific to the POSIX environment MC runs on, some are
familiar to the users of similar software for other operating systems.
The features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Built in Virtual File System: manipulate remote file systems through the FTP and SFTP protocols or over secure shell, browse contents of tar, ar, rpm, zip, cpio, lha and rar archives just like local files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Almost all operations work with the virtual file system, enabling you to do complex tasks, like viewing files in archives on an FTP server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mouse support on most terminal emulators for X Window System as well as on the Linux console.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn Keys: GNU Midnight Commander may be configured at run time to support any kind of input keys for a given terminal, making its operation possible even on most weird terminals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Text and hex editors are available for you to use (hex editor is a part of the viewer).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hotlist allows you to keep a list of common visited locations, including remote sites and directories inside archives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Command completion: By pressing Alt-Tab in any place where a filename or an executable are expected, GNU Midnight Commander will complete the name for you.  If you press Alt-Tab for the second time, you get a list box with all possible completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subshell support: Run your commands by a real shell interpreter.  GNU Midnight Commander interacts with bash, tcsh and zsh to provide you with all of the facilities available in your preferred shell.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find file command can search for the file contents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Background operations allow you to copy or move files from any virtual file system while you do other tasks (i.e., you can do background FTP copies).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FTP proxy is supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux file recovery: If you are using Linux, you can recover deleted files from an ext2 or ext3 partition with the undelete file system.  This is a low level file recovery function that can recover files deleted by any program on Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;External panelization: You can run any arbitrary external command and GNU Midnight Commander will display the output generated as a file listing that can be manipulated as a regular directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Emacs-like key bindings are used in all widgets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Context dependent actions (open, view, edit) are available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The built-in file viewer, together with the context dependent actions is used to format man pages on the fly, coloring mail messages and more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The built-in editor supports syntax highlighting and external actions, such as spell checking and formatting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Display and control your Android device</title>
      <link>http://localhost:1313/post/scrcpy/</link>
      <pubDate>Fri, 14 Apr 2023 16:10:00 +0300</pubDate>
      <guid>http://localhost:1313/post/scrcpy/</guid>
      <description>&lt;p&gt;&lt;code&gt;scrcpy&lt;/code&gt; is an open-source tool developed by Genymobile, you can visit the &lt;a href=&#34;https://github.com/Genymobile/scrcpy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Official GitHub&lt;/a&gt; and learn more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Word from the author:&lt;/strong&gt;
This application mirrors Android devices (video and audio) connected via USB or over TCP/IP, and allows to control the device with the keyboard and the mouse of the computer. It does not require any root access. It works on Linux, Windows and macOS.&lt;/p&gt;
&lt;p&gt;It focuses on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt;: native, displays only the device screen&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt;: 30~120fps, depending on the device&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt;: 1920×1080 or above&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Genymobile/scrcpy/pull/646&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;35~70ms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt;: ~1 second to display the first image&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt;: nothing is left installed on the Android device&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;user benefits&lt;/strong&gt;: no account, no ads, no internet required&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;freedom&lt;/strong&gt;: free and open source software&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Its features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/audio.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;audio forwarding&lt;/a&gt; (Android &amp;gt;= 11)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/recording.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;recording&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mirroring with &lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/device.md#turn-screen-off&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Android device screen off&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/control.md#copy-paste&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;copy-paste&lt;/a&gt; in both directions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/video.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;configurable quality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android device screen &lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/v4l2.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;as a webcam (V4L2)&lt;/a&gt; (Linux-only)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/hid-otg.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;physical keyboard/mouse simulation (HID)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/blob/master/doc/hid-otg.md#otg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OTG mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;and more…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Running scrcpy&#34; srcset=&#34;
               /post/scrcpy/image1_hu210d91e3f6fb23d4d85f36345d7026fe_40658_73b3d6169a43938f656e699118da5d69.webp 400w,
               /post/scrcpy/image1_hu210d91e3f6fb23d4d85f36345d7026fe_40658_4a66c7aaf9182f60579c17a75635758d.webp 760w,
               /post/scrcpy/image1_hu210d91e3f6fb23d4d85f36345d7026fe_40658_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/scrcpy/image1_hu210d91e3f6fb23d4d85f36345d7026fe_40658_73b3d6169a43938f656e699118da5d69.webp&#34;
               width=&#34;760&#34;
               height=&#34;205&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;This tool gets better as it ages, like good &lt;code&gt;wine&lt;/code&gt;, please &lt;a href=&#34;https://github.com/Genymobile/scrcpy/graphs/contributors&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;keep up the good work guys&lt;/a&gt; 💯&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Package Managers - not the evil kind of PMs</title>
      <link>http://localhost:1313/post/pkgman/</link>
      <pubDate>Tue, 21 Mar 2023 21:27:00 +0300</pubDate>
      <guid>http://localhost:1313/post/pkgman/</guid>
      <description>

&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Table of Contents&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#scoop&#34;&gt;Scoop&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#homebrew&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#bonus-drum&#34;&gt;Bonus &lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;If you come from planet Linux you&amp;rsquo;ve used a package manager before, &lt;code&gt;pacman&lt;/code&gt; on Archlinux, &lt;code&gt;apt&lt;/code&gt; on Debian/Ubuntu, each distro has it&amp;rsquo;s own beast, you already know how powerful and productive they are, now the time has come to use them on your &lt;em&gt;other&lt;/em&gt; workstation &amp;#x1f604;&lt;/p&gt;
&lt;p&gt;&amp;#x1f37b; But first, an ode to them!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the land of coding, where software abounds,&lt;br&gt;
Where apps and updates are always around,&lt;br&gt;
A hero emerged, to manage it all,&lt;br&gt;
A package manager, standing tall!&lt;/p&gt;
&lt;p&gt;With Scoop for Windows, and Homebrew for Mac,&lt;br&gt;
These package managers kept software on track,&lt;br&gt;
Installations were simple, updates were too,&lt;br&gt;
Making life easier for me and for you.&lt;/p&gt;
&lt;p&gt;So hail to the package managers, we say,&lt;br&gt;
For keeping our software up-to-date each day,&lt;br&gt;
We honor your efforts, your skill, your might,&lt;br&gt;
And thank you for making our coding lives bright!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/chat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;&amp;hellip;generated by ChatGPT&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Package managers are essential tools that make it easy for developers and users to install, update, and manage software applications on their computers, not only command line tools buthuge apps like browsers and IDEs. Two of the most popular package managers are &lt;a href=&#34;https://scoop.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoop&lt;/a&gt; for Windows and &lt;a href=&#34;https://brew.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Homebrew&lt;/a&gt; for macOS.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;scoop&#34;&gt;Scoop&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Scoop&#34; srcset=&#34;
               /post/pkgman/scoop_hue9dd2581607dc8b7881fae9b2d0ad3d3_47385_eab2cc6fecafddfcd78a741590a36084.webp 400w,
               /post/pkgman/scoop_hue9dd2581607dc8b7881fae9b2d0ad3d3_47385_2866e213bb690c93878dc1361b0effe7.webp 760w,
               /post/pkgman/scoop_hue9dd2581607dc8b7881fae9b2d0ad3d3_47385_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/pkgman/scoop_hue9dd2581607dc8b7881fae9b2d0ad3d3_47385_eab2cc6fecafddfcd78a741590a36084.webp&#34;
               width=&#34;760&#34;
               height=&#34;315&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

Scoop is a command-line installer for Windows that allows users to easily install and manage software packages from the command line. As mentioned in the &lt;a href=&#34;https://github.com/ScoopInstaller/Scoop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub official page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What does Scoop do?&lt;/p&gt;
&lt;p&gt;Scoop installs programs from the command line with a minimal amount of friction. It:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eliminates permission popup windows&lt;/li&gt;
&lt;li&gt;Hides GUI wizard-style installers&lt;/li&gt;
&lt;li&gt;Prevents PATH pollution from installing lots of programs&lt;/li&gt;
&lt;li&gt;Avoids unexpected side-effects from installing and uninstalling programs&lt;/li&gt;
&lt;li&gt;Finds and installs dependencies automatically&lt;/li&gt;
&lt;li&gt;Performs all the extra setup steps itself to get a working program&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like, e.g.:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop install sudo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo scoop install 7zip git openssh --global
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop install aria2 curl grep sed less touch
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop install python ruby go perl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s from the official page, but, having installed some packages the first time &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; what I usually do each time I log in Windows is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop update *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scoop cleanup *
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;homebrew&#34;&gt;Homebrew&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Homebrew&#34; srcset=&#34;
               /post/pkgman/homebrew_hud40646f9ad150c759436e766aad82c75_331219_09b7cef61ddb75c056894ba069247cbd.webp 400w,
               /post/pkgman/homebrew_hud40646f9ad150c759436e766aad82c75_331219_46672bf2ca664312d496529b452ece6e.webp 760w,
               /post/pkgman/homebrew_hud40646f9ad150c759436e766aad82c75_331219_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/pkgman/homebrew_hud40646f9ad150c759436e766aad82c75_331219_09b7cef61ddb75c056894ba069247cbd.webp&#34;
               width=&#34;760&#34;
               height=&#34;611&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

Homebrew is a command-line package manager for macOS (or Linux &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;) that allows installing software from the terminal. Brew provides a centralized repository of software packages that can be easily updated and installed. Again, from the &lt;a href=&#34;https://github.com/Homebrew/brew&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official GitHub homepage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Features, usage and installation instructions are &lt;a href=&#34;https://brew.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;summarised on the homepage&lt;/a&gt;. Terminology (e.g. the difference between a Cellar, Tap, Cask and so forth) is &lt;a href=&#34;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;explained here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What Packages Are Available?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;type &lt;code&gt;brew formulae&lt;/code&gt; for a list.&lt;/li&gt;
&lt;li&gt;or visit &lt;a href=&#34;https://formulae.brew.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;formulae.brew.sh&lt;/a&gt; to browse packages online.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Documentation&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew help&lt;/code&gt;, &lt;code&gt;man brew&lt;/code&gt; or check &lt;a href=&#34;https://docs.brew.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;our documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bonus-drum&#34;&gt;Bonus &amp;#x1f941;&lt;/h2&gt;
&lt;p&gt;If you come from Windows there&amp;rsquo;s a free (not open-source) tool called &lt;a href=&#34;https://patchmypc.com/home-updater&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Patch My PC Home Updater&lt;/a&gt; that installs a large list of apps with an easy user interface, what&amp;rsquo;s cool about it? &lt;br&gt;
That the apps are already hand-picked and that they are fully categorized! You can find very useful freeware tools there &amp;#x1f609;
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Patch My PC&#34; srcset=&#34;
               /post/pkgman/pmpc_hub46d0622a3d9f333acbd88c7e296fc95_113137_f3b0dda2676dbd353b4b12d7db17d55d.webp 400w,
               /post/pkgman/pmpc_hub46d0622a3d9f333acbd88c7e296fc95_113137_1caf5b225a17213d1296d902ee427c5c.webp 760w,
               /post/pkgman/pmpc_hub46d0622a3d9f333acbd88c7e296fc95_113137_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/pkgman/pmpc_hub46d0622a3d9f333acbd88c7e296fc95_113137_f3b0dda2676dbd353b4b12d7db17d55d.webp&#34;
               width=&#34;760&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Both package managers are awesome, try them and remember, I told you so&amp;#x2122;&amp;#xfe0f;&lt;br&gt;
It would be great if you can support the authors in a way, too.\&lt;/p&gt;
&lt;p&gt;In case you want to try more package managers there are &lt;a href=&#34;https://www.finkproject.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fink&lt;/a&gt; and &lt;a href=&#34;https://www.macports.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MacPorts&lt;/a&gt; for macOS and &lt;a href=&#34;https://chocolatey.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chokolatey&lt;/a&gt; for Windows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: I found out that there&amp;rsquo;s an official Windows tool : &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/package-manager/winget/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;winget&lt;/a&gt;&lt;br&gt;
Very convenient since it scans all your (already) installed apps !&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;code&gt;scoop install git gh 7zip nano nodejs-lts hugo&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;I dont recommend this, leave your Linux package manager alone &amp;#x1f603;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Buku: a powerful bookmark manager</title>
      <link>http://localhost:1313/post/buku/</link>
      <pubDate>Sat, 18 Mar 2023 20:00:00 +0300</pubDate>
      <guid>http://localhost:1313/post/buku/</guid>
      <description>&lt;p&gt;Are you tired of losing track of your bookmarks across multiple browsers? Look no further than Buku, the powerful bookmark manager that imports bookmarks from all your browsers, works on console and has a web-based server.&lt;/p&gt;
&lt;p&gt;With Buku, you can easily organize your bookmarks into categories and tags, making it easy to find exactly what you need. Plus, Buku&amp;rsquo;s powerful search feature allows you to quickly locate any bookmark in your collection.&lt;/p&gt;
&lt;p&gt;One of the most unique features of Buku is its powerful console interface:&lt;/p&gt;
&lt;script async id=&#34;asciicast-137065&#34; src=&#34;https://asciinema.org/a/137065.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;This allows power users to manage their bookmarks from the command line, making it incredibly fast and efficient to use. But don&amp;rsquo;t worry if you&amp;rsquo;re not a command line aficionado, Buku also has a user-friendly web-based interface that&amp;rsquo;s perfect for beginners and not only has beautiful stats page but a powerful API that you can use to make your own applications!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bukuserver run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;screenshot&#34; srcset=&#34;
               /post/buku/screenshot-buku_hube1e73a6ceeb6c826f8d84c147e00f1a_217684_7576c0f6e534aca0ff120c26837c7504.webp 400w,
               /post/buku/screenshot-buku_hube1e73a6ceeb6c826f8d84c147e00f1a_217684_7ad44fb4193dfa576419908845c3b89b.webp 760w,
               /post/buku/screenshot-buku_hube1e73a6ceeb6c826f8d84c147e00f1a_217684_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/buku/screenshot-buku_hube1e73a6ceeb6c826f8d84c147e00f1a_217684_7576c0f6e534aca0ff120c26837c7504.webp&#34;
               width=&#34;760&#34;
               height=&#34;515&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Another great aspect of Buku is its cross-platform support. Whether you&amp;rsquo;re using Windows, Mac, or Linux, Buku will work seamlessly with your favorite browser.&lt;/p&gt;
&lt;p&gt;Buku is open source, written in Python and available from &lt;a href=&#34;https://github.com/jarun/buku&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to bypass Git Hooks</title>
      <link>http://localhost:1313/post/git-bypass/</link>
      <pubDate>Wed, 08 Mar 2023 12:42:52 +0200</pubDate>
      <guid>http://localhost:1313/post/git-bypass/</guid>
      <description>&lt;p&gt;&lt;code&gt;git push --no-verify&lt;/code&gt; is a command used to push your local changes to a remote repository without running pre-commit hooks or pre-push hooks. Pre-commit hooks and pre-push hooks are scripts that run before a commit or a push, and they are used to perform automated tests, code quality checks, or other actions that help ensure the quality and correctness of your code. You can use &lt;a href=&#34;https://github.com/typicode/husky&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;husky&lt;/a&gt; or &lt;a href=&#34;https://pre-commit.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pre-commit&lt;/a&gt; if you need extra features or just production ready tools.&lt;/p&gt;
&lt;p&gt;Sometimes, you may need to bypass these hooks and push your changes without running them. For example, if you&amp;rsquo;re in a hurry and you need to push a critical bug fix, or if you&amp;rsquo;re working in a team with strict code review policies and you need to push a work-in-progress commit for collaboration purposes.&lt;/p&gt;
&lt;p&gt;To use it simply add the &lt;code&gt;--no-verify&lt;/code&gt; flag to your git push command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push --no-verify
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will push your changes to the remote repository without running the pre-commit or pre-push hooks.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s important to note that using &amp;ndash;no-verify should be done with caution, as it can potentially lead to lower code quality and a higher risk of introducing bugs or other issues into your codebase. Therefore, it&amp;rsquo;s recommended to only use &amp;ndash;no-verify when it&amp;rsquo;s absolutely necessary and always double-check your code before pushing it to a remote repository.&lt;/p&gt;
&lt;p&gt;You can check the &lt;a href=&#34;https://git-scm.com/docs/git-push#Documentation/git-push.txt---no-verify&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official Git Documentation.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want a refresher on general Git practices you can check &lt;a href=&#34;http://localhost:1313/slides/git/&#34;&gt;my presentation.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Breaking the Barrier</title>
      <link>http://localhost:1313/post/barrier/</link>
      <pubDate>Fri, 20 Jan 2023 19:00:00 +0300</pubDate>
      <guid>http://localhost:1313/post/barrier/</guid>
      <description>&lt;p&gt;Barrier is an open-source KVM (Keyboard, Video, Mouse) software that allows users to share their keyboard and mouse across multiple computers. This allows users to move their cursor and type on one computer while the keyboard and mouse inputs are sent to another computer.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/debauchee/barrier/master/res/barrier.png&#34; alt=&#34;logo&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Barrier also supports the use of multiple monitors, allowing users to move their cursor seamlessly between different screens.The software is designed to be simple, easy to use, and highly configurable. Barrier is available for many operating systems and can be downloaded from &lt;a href=&#34;https://github.com/debauchee/barrier&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A little bit of history:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Barrier was created as a fork of Synergy due to certain limitations and issues that the developer of Barrier, Debauchee, experienced while using Synergy. Due to these limitations and issues, Debauchee decided to create a fork of Synergy, called Barrier, with the goal of addressing these issues and providing a more stable, customizable, and actively developed alternative to Synergy. Some of the features that Barrier added that Synergy didn&amp;rsquo;t have at the time like multi-monitor support, encryption, and improved cursor handling. Since then, Barrier has continued to be developed and maintained, with new features and improvements being added on a regular basis. It is also actively supported by its developer community, which aims to provide a stable, customizable and actively developed KVM solution for those who need it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I was an early user and even an Early Adopter of Synergy but was disappointed by the changes and bugs in version 3, then I switched to Barrier and never looked back.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.raspberrypi.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official Raspberry Pi&lt;/a&gt; website praised Barrier with &lt;a href=&#34;https://www.raspberrypi.com/news/share-your-keyboard-and-mouse-between-computers-with-barrier/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a nice article and a video guide&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/-G9IIauHOhA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;The configuration is easy and straightforward. You can find the instructions on how to install and configure Barrier on the &lt;a href=&#34;https://github.com/debauchee/barrier#readme&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub page&lt;/a&gt; or watch the video.&lt;/p&gt;
&lt;p&gt;Tip: You can use &lt;code&gt;Scroll Lock&lt;/code&gt; to lock on a computer and don&amp;rsquo;t switch by accident to another, e.g. when playing a game.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Free your notes with Joplin</title>
      <link>http://localhost:1313/post/joplin/</link>
      <pubDate>Tue, 20 Dec 2022 20:00:00 +0300</pubDate>
      <guid>http://localhost:1313/post/joplin/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://joplinapp.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Joplin&lt;/a&gt; is an open-source note taking app that allows users to easily organize and store notes, to-do lists, and other information. It can be used on a variety of devices, including desktops, laptops, and mobile devices.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://joplinapp.org/images/home-top-img-2x.webp&#34; alt=&#34;Joplin&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;One of the main features of Joplin is its ability to synchronize notes across multiple devices. Joplin also supports the use of multiple storage options, including the local file system, Dropbox, OneDrive, and WebDAV and more. In my case I use the local file system and synchronize the notes with my Synology NAS via &amp;ldquo;Cloud Station Drive&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The notes are in &lt;a href=&#34;https://www.markdownguide.org/tools/joplin/#joplin-markdown-support&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown format&lt;/a&gt;. Joplin is available as a &lt;strong&gt;💻 desktop&lt;/strong&gt;, &lt;strong&gt;📱 mobile&lt;/strong&gt; and &lt;strong&gt;🔡 terminal&lt;/strong&gt; application.&lt;/p&gt;
&lt;p&gt;Joplin also has a built-in to-do list feature that allows users to easily create and track tasks. This feature is integrated with the note-taking functionality, making it easy to keep track of tasks related to specific notes.&lt;/p&gt;
&lt;p&gt;Another great feature of Joplin is its support for encryption, which allows users to secure their notes and keep them private.&lt;/p&gt;
&lt;p&gt;Full text search is available on all platforms to quickly find the information you need.&lt;/p&gt;
&lt;p&gt;Check the big list of features &lt;a href=&#34;https://joplinapp.org/#features&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>http://localhost:1313/slides/git/</link>
      <pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/slides/git/</guid>
      <description>&lt;section&gt;
&lt;h1 id=&#34;git&#34;&gt;Git&lt;/h1&gt;
&lt;h2 id=&#34;not-just-version-control&#34;&gt;not just version control&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;git&#34;
           src=&#34;http://localhost:1313/slides/git/org.gnome.gitg.svg&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;v2.1 by &lt;a href=&#34;https://georgelitos.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Litos&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;a-bit-of-history&#34;&gt;a bit of history&lt;/h2&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Git was originally authored by &lt;a href=&#34;https://en.wikipedia.org/wiki/Linus_Torvalds&#34; title=&#34;Linus Torvalds&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linus Torvalds&lt;/a&gt; in 2005 for development of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux_kernel&#34; title=&#34;Linux kernel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux kernel&lt;/a&gt;, with other kernel developers contributing to its initial development.
&lt;/span&gt; &lt;span class=&#34;fragment &#34; &gt;
  Since 2005, Junio Hamano has been the core maintainer.
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;menu-title&#34; style=&#34;display: none&#34;&gt;a bit of history cont&amp;rsquo;d&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As with most other &lt;a href=&#34;https://en.wikipedia.org/wiki/Distributed_version_control&#34; title=&#34;Distributed version control&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;distributed version control&lt;/a&gt; systems, and unlike most client–server systems, every Git &lt;a href=&#34;https://en.wikipedia.org/wiki/Directory_%28computing%29&#34; title=&#34;Directory (computing)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;directory&lt;/a&gt; on every &lt;a href=&#34;https://en.wikipedia.org/wiki/Node_%28networking%29&#34; title=&#34;Node (networking)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;computer&lt;/a&gt; is a full-fledged &lt;a href=&#34;https://en.wikipedia.org/wiki/Repository_%28version_control%29&#34; title=&#34;Repository (version control)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt; with complete history and full version-tracking abilities, independent of network access or a central server.&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Git is &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_and_open-source_software&#34; title=&#34;Free and open-source software&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;free and open-source software&lt;/a&gt; distributed under the &lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_General_Public_License&#34; title=&#34;GNU General Public License&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GPL-2.0-only&lt;/a&gt; license.
&lt;/span&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tech-talk&#34;&gt;Tech Talk&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=4XpnKHJAok8&amp;amp;t=90s&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linus Torvalds on git&lt;/a&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/git/linus_hu59fe323ac78cc0b54098a97d35150f04_69797_c2bba156ad5afb82863a8af5e5caa9e4.webp 400w,
               /slides/git/linus_hu59fe323ac78cc0b54098a97d35150f04_69797_4e05231ba2dd2fadfb7bbd4159827624.webp 760w,
               /slides/git/linus_hu59fe323ac78cc0b54098a97d35150f04_69797_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/slides/git/linus_hu59fe323ac78cc0b54098a97d35150f04_69797_c2bba156ad5afb82863a8af5e5caa9e4.webp&#34;
               width=&#34;320&#34;
               height=&#34;216&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;menu-title&#34; style=&#34;display: none&#34;&gt;Git is alive&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;december-12-2022&#34;&gt;December 12, 2022&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.blog/2022-12-12-highlights-from-git-2-39/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git is alive and actively developed&lt;/a&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/git/git239_hu5c8e85710e339ea459e5affd104717cb_12776_95b1397f195907d2cbdbc4844ee28344.webp 400w,
               /slides/git/git239_hu5c8e85710e339ea459e5affd104717cb_12776_cfe60e752c2b6b99749feb0ae38f41ec.webp 760w,
               /slides/git/git239_hu5c8e85710e339ea459e5affd104717cb_12776_1200x1200_fit_q80_h2_lanczos_2.webp 1200w&#34;
               src=&#34;http://localhost:1313/slides/git/git239_hu5c8e85710e339ea459e5affd104717cb_12776_95b1397f195907d2cbdbc4844ee28344.webp&#34;
               width=&#34;50%&#34;
               height=&#34;50%&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Official site&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-color=&#34;#0d142c&#34;
  &gt;

&lt;p&gt;&lt;span class=&#34;menu-title&#34; style=&#34;display: none&#34;&gt;SO Survey 2021&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;stack-overflow-developer-survey-2021&#34;&gt;Stack Overflow Developer Survey 2021&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://insights.stackoverflow.com/survey/2021#most-popular-technologies-tools-tech&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Over 90% of respondents use Git, suggesting that it is a fundamental tool to being a developer.&lt;/a&gt;&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/git/so2021_hue28af7c1fdaa9ab76ef317e6426f05b4_75761_796a5d83ecd6ca27d2710ffa45bd574d.webp 400w,
               /slides/git/so2021_hue28af7c1fdaa9ab76ef317e6426f05b4_75761_019cfd3a8409fa3e171773c90050e5b3.webp 760w,
               /slides/git/so2021_hue28af7c1fdaa9ab76ef317e6426f05b4_75761_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/slides/git/so2021_hue28af7c1fdaa9ab76ef317e6426f05b4_75761_796a5d83ecd6ca27d2710ffa45bd574d.webp&#34;
               width=&#34;648&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-color=&#34;#232745&#34;
  &gt;

&lt;p&gt;&lt;span class=&#34;menu-title&#34; style=&#34;display: none&#34;&gt;SO Survey 2022&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;stack-overflow-developer-survey-2022&#34;&gt;Stack Overflow Developer Survey 2022&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://survey.stackoverflow.co/2022/#section-version-control-version-control-systems&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;No other technology is as widely used as Git. Especially among Professional Developers.&lt;/a&gt;&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/git/so2022_hu84a21014762d3e2fb603bed89afbb34c_18783_eb80f454c6bc68e0d4b9933431e85bb6.webp 400w,
               /slides/git/so2022_hu84a21014762d3e2fb603bed89afbb34c_18783_14e75c280ba8dd37fbc8dc4af1f075ce.webp 760w,
               /slides/git/so2022_hu84a21014762d3e2fb603bed89afbb34c_18783_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/slides/git/so2022_hu84a21014762d3e2fb603bed89afbb34c_18783_eb80f454c6bc68e0d4b9933431e85bb6.webp&#34;
               width=&#34;642&#34;
               height=&#34;189&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Q: What are the primary version control systems you use?&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;glossary&#34;&gt;Glossary&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Working directory - repo&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;the working directory is the folder on your system that you want to track. Where you develop your project. Everything git related is inside the &lt;code&gt;.git&lt;/code&gt; folder. Serverless.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Remote repository&lt;/td&gt;
&lt;td&gt;Remote repositories are versions of your project that are hosted elsewhere. You can have several of them, each one is either RO or RW for you.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Git files&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Inside the working directory and beneath, you might find some git related files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.gitattributes&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;how to handle files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.gitignore&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;what to ignore&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.gitkeep&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;keep an empty dir&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Tracked files&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Tracked files are the files in the working directory (repository) that Git manages.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;The Staging Area&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;The intermediary between the working directory and the project history.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/span&gt;
&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Commit&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Commit is the process of adding any changes in tracked files. Git will keep track of all the changes in the &lt;strong&gt;Committed History&lt;/strong&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Commit message&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;The commit message is a summary and description of a commit action.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/span&gt;
&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Branches&lt;/strong&gt; (develop, feature, master)&lt;/dt&gt;
&lt;dd&gt;A branch is a set of the repo tracked files. Git allows you to compare and merge branches. It can also be used to organize collaboration inside the repo, fix specific bugs, or create new features.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Merge&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Copy code changes from one branch to another.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;(not really git)&lt;/em&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Fork&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;You clone a public repo, make changes and contribute back with a PR.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Pull/Merge request (PR)&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;A PR is a request to the repository owner to merge your changes back into the original code base.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/span&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;git-init&#34;&gt;git init&lt;/h1&gt;
&lt;p&gt;Install &lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git&lt;/a&gt;, then&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global user.name &lt;span class=&#34;s2&#34;&gt;&amp;#34;John Smith&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global user.email john@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global init.defaultBranch main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create a new folder for your project and add a file under version control&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir -p ~/projects/git-test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/projects/git-test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nano new_file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;Commit the changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Initial commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[master (root-commit) 19632d1] Add new file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; 1 file changed, 1 insertion(+)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; create mode 100644 new-file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;every commit is unique, it contains:&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  a snapshot of the project (a tree with a compressed blob for each file),
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  user information,
&lt;/span&gt;&lt;span class=&#34;fragment &#34; &gt;
  date,
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  commit message,
&lt;/span&gt;&lt;span class=&#34;fragment &#34; &gt;
  SHA-1 checksum.
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;commit 81752cd6a514fd2595c40f27c783d6887f84e6e6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Author: John Smith &amp;lt;john@example.com&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Date:   Thu Apr 7 15:17:45 2022 +0000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    Initial commit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/span&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;dont-fear-the-git&#34;&gt;don&amp;rsquo;t fear the git!&lt;/h1&gt;
&lt;h2 id=&#34;git-will-help-&#34;&gt;Git will help 🥷&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cleanup your code base&lt;/li&gt;
&lt;li&gt;Backup your code&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Merge Requests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code Review&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CI/CD 🤖 (coming soon&amp;hellip;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code linting / beautify&lt;/li&gt;
&lt;li&gt;Automated Testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contribute to open source&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be famous 💰&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;workflow&#34;&gt;workflow&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gitflow Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://numpy.org/doc/stable/dev/development_workflow.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NumPy Development workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Link to JIRA issue&lt;/li&gt;
&lt;li&gt;Merge requests to the main branch&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-color=&#34;#fff&#34;
  &gt;

&lt;h2 id=&#34;a-successful-git-branching-model&#34;&gt;A successful Git branching model&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://nvie.com/posts/a-successful-git-branching-model/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;By Vincent Driessen&lt;/a&gt;&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /slides/git/git-model_hu2abe16d33a30cb6e0c9ea98da73c9465_124925_16cbad046f3a62639864713f143b9e2c.webp 400w,
               /slides/git/git-model_hu2abe16d33a30cb6e0c9ea98da73c9465_124925_6ee67de1562f6ead1214f6453fea969a.webp 760w,
               /slides/git/git-model_hu2abe16d33a30cb6e0c9ea98da73c9465_124925_1200x1200_fit_q80_h2_lanczos_3.webp 1200w&#34;
               src=&#34;http://localhost:1313/slides/git/git-model_hu2abe16d33a30cb6e0c9ea98da73c9465_124925_16cbad046f3a62639864713f143b9e2c.webp&#34;
               width=&#34;50%&#34;
               height=&#34;50%&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-color=&#34;#fff&#34;
  &gt;

&lt;h2 id=&#34;gitflow-workflow&#34;&gt;Gitflow Workflow&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Atlassian Tutorial&lt;/a&gt;&lt;/p&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34;
           src=&#34;http://localhost:1313/slides/git/branches.svg&#34;
           loading=&#34;lazy&#34; data-zoomable width=&#34;50%&#34; height=&#34;50%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;1-start-a-project&#34;&gt;1. Start a project&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Divide work in repositories&lt;/li&gt;
&lt;li&gt;Choose workflow (advanced git flow)&lt;/li&gt;
&lt;li&gt;Select which files to keep under version control&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-work-on-a-project&#34;&gt;2. Work on a project&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Working on a topic/feature/bugfix branch&lt;/li&gt;
&lt;li&gt;Splitting changes into logically separate steps&lt;/li&gt;
&lt;li&gt;Write a good commit message (e.g. present tense, short and meaningfull)&lt;/li&gt;
&lt;li&gt;Preparing changes for submission&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-integrate&#34;&gt;3. Integrate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Submitting and describing changes&lt;/li&gt;
&lt;li&gt;Merge request to the main branch&lt;/li&gt;
&lt;li&gt;Delete working branch&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;team-goal-&#34;&gt;TEAM GOAL 🥅&lt;/h1&gt;
&lt;h2 id=&#34;pull-the-servers-plug&#34;&gt;pull the servers&amp;rsquo; plug&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rebuild and restart services anytime&lt;/li&gt;
&lt;li&gt;Do a server &lt;code&gt;reboot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;🔥 Change servers and redeploy&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;rebuild-&#34;&gt;Rebuild 🏠&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;install docker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone repo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat README.md
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;gt; follow the instructions
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;span class=&#34;fragment &#34; &gt;
  &lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker&lt;/a&gt; for dev &amp;amp; production&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Markdown&lt;/a&gt; for writing&lt;/li&gt;
&lt;/ul&gt;
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-color=&#34;#fff&#34;
  &gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;in case of fire&#34;
           src=&#34;http://localhost:1313/slides/git/in_case_of_fire.svg&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;practice-and-use-everywhere&#34;&gt;practice and use everywhere&lt;/h1&gt;
&lt;p&gt;&amp;hellip;.you don&amp;rsquo;t need a server&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -a -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;Commit message&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout -b new_branch
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;When you don&amp;rsquo;t know what to do type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git status
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;On branch main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Your branch is up to date with &amp;#39;origin/main&amp;#39;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Changes not staged for commit:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  (use &amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34; to update what will be committed)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  (use &amp;#34;git restore &amp;lt;file&amp;gt;...&amp;#34; to discard changes in working directory)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	modified:   docker-compose.yml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Untracked files:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  (use &amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34; to include in what will be committed)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	.idea/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	db_sink/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	file_records/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	record_transformer/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;no changes added to commit (use &amp;#34;git add&amp;#34; and/or &amp;#34;git commit -a&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;git-tips&#34;&gt;Git tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Learn the command line basics&lt;/li&gt;
&lt;li&gt;&amp;hellip;and then use a GUI&lt;/li&gt;
&lt;li&gt;you don&amp;rsquo;t have to use only 1 (git) client&lt;/li&gt;
&lt;li&gt;git reset &amp;ndash;hard&lt;/li&gt;
&lt;li&gt;Use aliases (cmdline)&lt;/li&gt;
&lt;li&gt;Use the log/graph 😛&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t panic, recovery is (almost) always possible&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;resolve-merge-conflicts-with-gui&#34;&gt;Resolve merge conflicts with GUI&lt;/h2&gt;
&lt;p&gt;(e.g. Jetbrains PhpStorm)&lt;/p&gt;
&lt;img src=&#34;resolveConflict.png&#34; /&gt;
&lt;hr&gt;
&lt;h2 id=&#34;om-my-zsh-aliases&#34;&gt;om-my-zsh aliases&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;g=git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ga=&amp;#39;git add&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gl=&amp;#39;git pull&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gp=&amp;#39;git push&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcam=&amp;#39;git commit -a -m&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcd=&amp;#39;git checkout $(git_develop_branch)&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gdcw=&amp;#39;git diff --cached --word-diff&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gfa=&amp;#39;git fetch --all --prune --jobs=10&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ggpush=&amp;#39;git push origin &amp;#34;$(git_current_branch)&amp;#34;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gloga=&amp;#39;git log --oneline --decorate --graph --all&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grup=&amp;#39;git remote update&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsps=&amp;#39;git show --pretty=short --show-signature&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gst=&amp;#39;git status&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gstl=&amp;#39;git stash list&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gswd=&amp;#39;git switch $(git_develop_branch)&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;github-tips&#34;&gt;Github tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Check GitHub tools (desktop and cmdline clients)&lt;/li&gt;
&lt;li&gt;Search GitHub with powerfull filters (stars/topic/users/language)&lt;/li&gt;
&lt;li&gt;Check &lt;a href=&#34;https://github.com/explore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github Explore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check project Issues&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;advanced-git&#34;&gt;Advanced git&lt;/h1&gt;
&lt;dl&gt;
&lt;dt&gt;Cherry-pick&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;git cherry-pick&lt;/code&gt; lets you select a commit from a branch to apply it to another branch.&lt;/dd&gt;
&lt;dt&gt;Using tags&lt;/dt&gt;
&lt;dd&gt;Git has the option to tag a commit in the repository so that you find it easier or mark an app version on a commit.&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git tag 1.0.0 -m &amp;#39;Release 1.0.0&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;dl&gt;
&lt;dt&gt;Stashing your changes&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;git stash&lt;/code&gt; allows you to save the current state of the local repository and restore it later.&lt;/dd&gt;
&lt;dt&gt;Creating a patch&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;git format-patch&lt;/code&gt; command is useful to transfer a commit
to another repository&lt;/dd&gt;
&lt;/dl&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;best-practices&#34;&gt;Best practices&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Commit (local) often&lt;/li&gt;
&lt;li&gt;Push daily (at least EOD) 🕠&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/how-to-write-better-git-commit-messages/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Write better commit messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;and-worst&#34;&gt;&amp;hellip;and worst&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t commit half-done work&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t change the published history&lt;/li&gt;
&lt;li&gt;Never rebase a branch that has been pushed to a public repository&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;semantic-commit-messages&#34;&gt;Semantic Commit Messages&lt;/h2&gt;
&lt;p&gt;See how a minor change to your commit message style can make you a better programmer.&lt;/p&gt;
&lt;p&gt;Format: &lt;code&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;scope&amp;gt;&lt;/code&gt; is optional&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;feat: add hat wobble
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;^--^  ^------------^
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|     |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|     +-&amp;gt; Summary in present tense.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+-------&amp;gt; Type: chore, docs, feat, fix, refactor, style, or test.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;more-examples&#34;&gt;More Examples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feat&lt;/code&gt;: (new feature for the user, not a new feature for build script)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix&lt;/code&gt;: (bug fix for the user, not a fix to a build script)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs&lt;/code&gt;: (changes to the documentation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style&lt;/code&gt;: (formatting, missing semi colons, etc; no production code change)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refactor&lt;/code&gt;: (refactoring production code, eg. renaming a variable)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt;: (adding missing tests, refactoring tests; no production code change)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chore&lt;/code&gt;: (updating grunt tasks etc; no production code change)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.conventionalcommits.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.conventionalcommits.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://seesparkbox.com/foundry/semantic_commit_messages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://seesparkbox.com/foundry/semantic_commit_messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://karma-runner.github.io/1.0/dev/git-commit-msg.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://karma-runner.github.io/1.0/dev/git-commit-msg.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;hr&gt;
&lt;section&gt;
&lt;h1 id=&#34;books&#34;&gt;Books&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pro Git&lt;/a&gt; by Scott Chacon and Ben Straub


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://git-scm.com/images/progit2.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;200&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://www.syncfusion.com/succinctly-free-ebooks/git/overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Succinctly&lt;/a&gt; by Ryan Hodson


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://cdn.syncfusion.com/content/images/downloads/ebook/ebook-cover/Git-Succinctly.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;200&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;cheat-sheets&#34;&gt;Cheat Sheets&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://education.github.com/git-cheat-sheet-education.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Education&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.git-tower.com/blog/git-cheat-sheet/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Tower Git cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cheat.sh/git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cheat.sh/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;tutorials&#34;&gt;Tutorials&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rogerdudler.github.io/git-guide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git - the simple guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/get-started/quickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marklodato.github.io/visual-git-guide/index-en.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A Visual Git Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;man git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; &amp;lt;command&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/section&gt;
&lt;hr&gt;
&lt;h1 id=&#34;advanced-topics&#34;&gt;Advanced topics&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/addressing-merge-conflicts/resolving-a-merge-conflict-using-the-command-line&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Resolving a merge conflict using the command line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cbea.ms/git-commit/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Write a Git Commit Message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/merging-vs-rebasing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Merging vs. Rebasing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Distributed-Git-Maintaining-a-Project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Distributed Git - Maintaining a Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://coderwall.com/p/0c-ayq/howto-split-a-git-repository-into-two&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Howto split a git repository into two&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://matthew-brett.github.io/curious-git/curious_git.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curious git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/git-hooks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-lfs.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git Large File Storage (LFS)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
